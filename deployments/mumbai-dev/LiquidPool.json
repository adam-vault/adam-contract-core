{
  "address": "0xbf1f70b7Ce0c9A39181D209016e88d1028085532",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccountingSystemRequired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "AssetAlreadyAdded",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "AssetNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BlockedByLocktime",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "budgetApproval",
          "type": "address"
        }
      ],
      "name": "BudgetApprovalNotExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "count1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count2",
          "type": "uint256"
        }
      ],
      "name": "InputLengthNotMatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyBudgetApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "base",
          "type": "address"
        }
      ],
      "name": "PairNotSupport",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "template",
          "type": "address"
        }
      ],
      "name": "TemplateNotWhitelisted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "name": "TransferFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "UnsupportedAsset",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "AllowDepositToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "budgetApproval",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "CreateBudgetApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "DisallowDepositToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "budgetApproval",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ExecuteByBudgetApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "budgetApproval",
          "type": "address"
        }
      ],
      "name": "RevokeBudgetApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accountingSystem",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "erc20s",
          "type": "address[]"
        }
      ],
      "name": "addAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "assetBaseCurrencyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "assetPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assetsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "assetsShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseCurrency",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseCurrencyDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "template",
          "type": "address"
        }
      ],
      "name": "budgetApprovals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "canAddAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "canResolvePrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "__budgetApprovals",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "createBudgetApprovals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "executeByBudgetApproval",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "depositTokens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "__baseCurrency",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "isAssetSupported",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "erc20s",
          "type": "address[]"
        }
      ],
      "name": "removeAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "__budgetApprovals",
          "type": "address[]"
        }
      ],
      "name": "revokeBudgetApprovals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "team",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPriceInNativeToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9a1138670daa58228499a3075737aa9e2052fbe2959abef7323f0d32d947b024",
  "receipt": {
    "to": null,
    "from": "0x2d61d2ea8c296305C4AF461f12a172cF1d0af599",
    "contractAddress": "0xbf1f70b7Ce0c9A39181D209016e88d1028085532",
    "transactionIndex": 5,
    "gasUsed": "3370189",
    "logsBloom": "0x
    "blockHash": "0x5178b11ccdefc922ccc9c05d5694d926491ed6fbeadbd30e9ce78e45d9bab8d4",
    "transactionHash": "0x9a1138670daa58228499a3075737aa9e2052fbe2959abef7323f0d32d947b024",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 32313214,
        "transactionHash": "0x9a1138670daa58228499a3075737aa9e2052fbe2959abef7323f0d32d947b024",
        "address": "0xbf1f70b7Ce0c9A39181D209016e88d1028085532",
        "topics": [
          "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000ff",
        "logIndex": 28,
        "blockHash": "0x5178b11ccdefc922ccc9c05d5694d926491ed6fbeadbd30e9ce78e45d9bab8d4"
      },
      {
        "transactionIndex": 5,
        "blockNumber": 32313214,
        "transactionHash": "0x9a1138670daa58228499a3075737aa9e2052fbe2959abef7323f0d32d947b024",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000002d61d2ea8c296305c4af461f12a172cf1d0af599",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000011f5c0e941a30000000000000000000000000000000000000000000000000005873f52dc831d4f000000000000000000000000000000000000000000001b83485782d7044cd4e700000000000000000000000000000000000000000000000005754991f3417a4f000000000000000000000000000000000000000000001b8348697897ed8e77e7",
        "logIndex": 29,
        "blockHash": "0x5178b11ccdefc922ccc9c05d5694d926491ed6fbeadbd30e9ce78e45d9bab8d4"
      }
    ],
    "blockNumber": 32313214,
    "cumulativeGasUsed": "7890171",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "e97f886f30443c3289ff077b740c5238",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccountingSystemRequired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AssetAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AssetNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BlockedByLocktime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"budgetApproval\",\"type\":\"address\"}],\"name\":\"BudgetApprovalNotExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count2\",\"type\":\"uint256\"}],\"name\":\"InputLengthNotMatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyBudgetApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"}],\"name\":\"PairNotSupport\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"template\",\"type\":\"address\"}],\"name\":\"TemplateNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"UnsupportedAsset\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AllowDepositToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"budgetApproval\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"CreateBudgetApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"DisallowDepositToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"budgetApproval\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecuteByBudgetApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"budgetApproval\",\"type\":\"address\"}],\"name\":\"RevokeBudgetApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountingSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"erc20s\",\"type\":\"address[]\"}],\"name\":\"addAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"assetBaseCurrencyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"assetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"assetsShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseCurrency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseCurrencyDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"template\",\"type\":\"address\"}],\"name\":\"budgetApprovals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"canAddAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"canResolvePrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"__budgetApprovals\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"createBudgetApprovals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"executeByBudgetApproval\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"depositTokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"__baseCurrency\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"isAssetSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"erc20s\",\"type\":\"address[]\"}],\"name\":\"removeAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"__budgetApprovals\",\"type\":\"address[]\"}],\"name\":\"revokeBudgetApprovals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"team\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPriceInNativeToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assetBaseCurrencyPrice(address,uint256)\":{\"notice\":\"This function is imported by other contract, thus cannot be external\"},\"canResolvePrice(address)\":{\"notice\":\"This function is imported by other contract, thus cannot be external\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidPool.sol\":\"LiquidPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/Denominations.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nlibrary Denominations {\\n  address public constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n  address public constant BTC = 0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB;\\n\\n  // Fiat currencies follow https://en.wikipedia.org/wiki/ISO_4217\\n  address public constant USD = address(840);\\n  address public constant GBP = address(826);\\n  address public constant EUR = address(978);\\n  address public constant JPY = address(392);\\n  address public constant KRW = address(410);\\n  address public constant CNY = address(156);\\n  address public constant AUD = address(36);\\n  address public constant CAD = address(124);\\n  address public constant CHF = address(756);\\n  address public constant ARS = address(32);\\n  address public constant PHP = address(608);\\n  address public constant NZD = address(554);\\n  address public constant SGD = address(702);\\n  address public constant NGN = address(566);\\n  address public constant ZAR = address(710);\\n  address public constant RUB = address(643);\\n  address public constant INR = address(356);\\n  address public constant BRL = address(986);\\n}\\n\",\"keccak256\":\"0xee406990d671c95993762c3ee15c77987ee35c3682357c419ff73747a728fc4d\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorInterface {\\n  function latestAnswer() external view returns (int256);\\n\\n  function latestTimestamp() external view returns (uint256);\\n\\n  function latestRound() external view returns (uint256);\\n\\n  function getAnswer(uint256 roundId) external view returns (int256);\\n\\n  function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\\n\\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\\n}\\n\",\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AggregatorInterface.sol\\\";\\nimport \\\"./AggregatorV3Interface.sol\\\";\\n\\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface {}\\n\",\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\nimport \\\"./AggregatorV2V3Interface.sol\\\";\\n\\ninterface FeedRegistryInterface {\\n  struct Phase {\\n    uint16 phaseId;\\n    uint80 startingAggregatorRoundId;\\n    uint80 endingAggregatorRoundId;\\n  }\\n\\n  event FeedProposed(\\n    address indexed asset,\\n    address indexed denomination,\\n    address indexed proposedAggregator,\\n    address currentAggregator,\\n    address sender\\n  );\\n  event FeedConfirmed(\\n    address indexed asset,\\n    address indexed denomination,\\n    address indexed latestAggregator,\\n    address previousAggregator,\\n    uint16 nextPhaseId,\\n    address sender\\n  );\\n\\n  // V3 AggregatorV3Interface\\n\\n  function decimals(address base, address quote) external view returns (uint8);\\n\\n  function description(address base, address quote) external view returns (string memory);\\n\\n  function version(address base, address quote) external view returns (uint256);\\n\\n  function latestRoundData(address base, address quote)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function getRoundData(\\n    address base,\\n    address quote,\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  // V2 AggregatorInterface\\n\\n  function latestAnswer(address base, address quote) external view returns (int256 answer);\\n\\n  function latestTimestamp(address base, address quote) external view returns (uint256 timestamp);\\n\\n  function latestRound(address base, address quote) external view returns (uint256 roundId);\\n\\n  function getAnswer(\\n    address base,\\n    address quote,\\n    uint256 roundId\\n  ) external view returns (int256 answer);\\n\\n  function getTimestamp(\\n    address base,\\n    address quote,\\n    uint256 roundId\\n  ) external view returns (uint256 timestamp);\\n\\n  // Registry getters\\n\\n  function getFeed(address base, address quote) external view returns (AggregatorV2V3Interface aggregator);\\n\\n  function getPhaseFeed(\\n    address base,\\n    address quote,\\n    uint16 phaseId\\n  ) external view returns (AggregatorV2V3Interface aggregator);\\n\\n  function isFeedEnabled(address aggregator) external view returns (bool);\\n\\n  function getPhase(\\n    address base,\\n    address quote,\\n    uint16 phaseId\\n  ) external view returns (Phase memory phase);\\n\\n  // Round helpers\\n\\n  function getRoundFeed(\\n    address base,\\n    address quote,\\n    uint80 roundId\\n  ) external view returns (AggregatorV2V3Interface aggregator);\\n\\n  function getPhaseRange(\\n    address base,\\n    address quote,\\n    uint16 phaseId\\n  ) external view returns (uint80 startingRoundId, uint80 endingRoundId);\\n\\n  function getPreviousRoundId(\\n    address base,\\n    address quote,\\n    uint80 roundId\\n  ) external view returns (uint80 previousRoundId);\\n\\n  function getNextRoundId(\\n    address base,\\n    address quote,\\n    uint80 roundId\\n  ) external view returns (uint80 nextRoundId);\\n\\n  // Feed management\\n\\n  function proposeFeed(\\n    address base,\\n    address quote,\\n    address aggregator\\n  ) external;\\n\\n  function confirmFeed(\\n    address base,\\n    address quote,\\n    address aggregator\\n  ) external;\\n\\n  // Proposed aggregator\\n\\n  function getProposedFeed(address base, address quote)\\n    external\\n    view\\n    returns (AggregatorV2V3Interface proposedAggregator);\\n\\n  function proposedGetRoundData(\\n    address base,\\n    address quote,\\n    uint80 roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 id,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function proposedLatestRoundData(address base, address quote)\\n    external\\n    view\\n    returns (\\n      uint80 id,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  // Phases\\n  function getCurrentPhaseId(address base, address quote) external view returns (uint16 currentPhaseId);\\n}\\n\",\"keccak256\":\"0xa783cf3434bd5b5153fe876c37d5d5cb78d4e198f01f184b60ed3392401ddc0d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../extensions/draft-IERC20PermitUpgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20PermitUpgradeable token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"},\"contracts/LiquidPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.7;\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/Denominations.sol\\\";\\n\\nimport \\\"./base/BudgetApprovalExecutee.sol\\\";\\nimport \\\"./base/PriceResolver.sol\\\";\\nimport \\\"./lib/Concat.sol\\\";\\nimport \\\"./interface/IDao.sol\\\";\\n\\ncontract LiquidPool is Initializable, ERC20Upgradeable, PriceResolver, BudgetApprovalExecutee, OwnableUpgradeable {\\n    using Concat for string;\\n    using SafeERC20Upgradeable for IERC20MetadataUpgradeable;\\n    using AddressUpgradeable for address;\\n    \\n    address private _baseCurrency;\\n    address[] public assets;\\n    mapping(address => uint256) private _assetIndex;\\n\\n    event AllowDepositToken(address token);\\n    event DisallowDepositToken(address token);\\n    event Deposit(address account, address token, uint256 depositAmount);\\n\\n    error AccountingSystemRequired();\\n    error UnsupportedAsset(address token);\\n    error AssetAlreadyAdded(address token);\\n    error AssetNotFound(address token);\\n    error InvalidAmount();\\n    error TemplateNotWhitelisted(address template);\\n    error TransferFailed(bytes result);\\n    error BlockedByLocktime();\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n      _disableInitializers();\\n    }\\n\\n    function initialize(\\n        address[] memory depositTokens,\\n        address __baseCurrency\\n    )\\n        public initializer\\n    {\\n        __Ownable_init();\\n        if (!accountingSystem().isContract()) {\\n            revert AccountingSystemRequired();\\n        }\\n\\n        __ERC20_init(\\\"LiquidPool\\\", \\\"LP\\\");\\n        _baseCurrency = __baseCurrency;\\n        _addAssets(depositTokens);\\n            }\\n\\n    function baseCurrency() public view override returns(address) {\\n        return _baseCurrency;\\n    }\\n\\n    function team() public view override returns(address) {\\n        return _dao().team();\\n    }\\n\\n    function accountingSystem() public view override(PriceResolver, BudgetApprovalExecutee) returns(address) {\\n        return _dao().accountingSystem();\\n    }\\n    \\n    function _dao() internal view returns (IDao) {\\n        return IDao(payable(owner()));\\n    }\\n\\n    function assetsShares(address asset, uint256 amount) public view returns (uint256) {\\n        uint256 _totalSupply = totalSupply();\\n\\n        if (amount > _totalSupply) {\\n            revert InvalidAmount();\\n        }\\n        if (!isAssetSupported(asset)) {\\n            revert UnsupportedAsset(asset);\\n        }\\n        if (_totalSupply == 0) return 0;\\n\\n        return _assetBalance(asset) * amount / _totalSupply;\\n    }\\n\\n    function quote(uint256 amount) public view returns (uint256) {\\n        uint256 _totalSupply = totalSupply();\\n\\n        if (_totalSupply == 0) return amount;\\n        return amount * _totalSupply / totalPrice();\\n    }\\n\\n    function canAddAsset(address asset) public view returns (bool) {\\n        return canResolvePrice(asset);\\n    }\\n\\n    function totalPrice() public view returns (uint256) {\\n        uint256 total;\\n        uint256 _assetsLength = assets.length;\\n\\n        for (uint256 i = 0; i < _assetsLength; i++) {\\n            address _asset = assets[i];\\n            total += assetBaseCurrencyPrice(_asset,  _assetBalance(_asset));\\n        }\\n        return total;\\n    }\\n\\n    function totalPriceInNativeToken() public view returns (uint256) {\\n        uint256 total;\\n        uint256 _assetsLength = assets.length;\\n\\n        for (uint256 i = 0; i < _assetsLength; i++) {\\n            address _asset = assets[i];\\n            total += assetPrice(_asset, Constant.NATIVE_TOKEN, _assetBalance(_asset));\\n        }\\n        return total;\\n    }\\n\\n    function isAssetSupported(address asset) public view returns (bool) {\\n        return _assetIndex[asset] > 0;\\n    }\\n\\n    function deposit(address receiver) public payable {\\n        if (!isAssetSupported(Constant.NATIVE_TOKEN)) {\\n            revert UnsupportedAsset(Constant.NATIVE_TOKEN);\\n        }\\n        uint256 _totalSupply = totalSupply();\\n        uint256 nativeTokenPriceInBaseCurrency = assetBaseCurrencyPrice(Constant.NATIVE_TOKEN, msg.value);\\n\\n        if (_totalSupply == 0) {\\n            _mint(receiver, nativeTokenPriceInBaseCurrency);\\n            _afterDeposit(receiver, nativeTokenPriceInBaseCurrency);\\n            emit Deposit(receiver, Constant.NATIVE_TOKEN, msg.value);\\n            return;\\n        }\\n        uint256 total = totalPrice() - nativeTokenPriceInBaseCurrency;\\n        _mint(receiver, nativeTokenPriceInBaseCurrency * _totalSupply / total);\\n\\n        _afterDeposit(receiver, nativeTokenPriceInBaseCurrency);\\n\\n        emit Deposit(receiver, Constant.NATIVE_TOKEN, msg.value);\\n    }\\n\\n    function redeem(uint256 amount) public {\\n        IDao __dao = _dao();\\n        if (balanceOf(msg.sender) < amount) {\\n            revert InvalidAmount();\\n        }\\n        if (__dao.firstDepositTime(msg.sender) + __dao.locktime() > block.timestamp) {\\n            revert BlockedByLocktime();\\n        }\\n\\n        uint256 _assetsLength = assets.length;\\n        for (uint256 i = 0; i < _assetsLength; i++) {\\n            address _asset = assets[i];\\n            _transferAsset(msg.sender, _asset, assetsShares(_asset, amount));\\n        }\\n        _burn(msg.sender, amount);\\n    }\\n\\n    function depositToken(address receiver, address asset, uint256 amount) public {\\n        if (!isAssetSupported(asset)) {\\n            revert UnsupportedAsset(asset);\\n        }\\n\\n        uint256 assetPriceInBaseCurrency = assetBaseCurrencyPrice(asset, amount);\\n        _mint(receiver, quote(assetPriceInBaseCurrency));\\n        IERC20MetadataUpgradeable(asset).safeTransferFrom(msg.sender, address(this), amount);\\n        _afterDeposit(receiver, assetPriceInBaseCurrency);\\n\\n        emit Deposit(receiver, asset, amount);\\n    }\\n\\n    function addAssets(address[] calldata erc20s) public onlyOwner {\\n        _addAssets(erc20s);\\n    }\\n\\n    function removeAssets(address[] calldata erc20s) public onlyOwner {\\n        _removeAssets(erc20s);\\n    }\\n\\n    function _beforeCreateBudgetApproval(address budgetApproval) internal view override onlyOwner {\\n        if (!_dao().canCreateBudgetApproval(budgetApproval)) {\\n            revert TemplateNotWhitelisted(budgetApproval);\\n        }\\n    }\\n\\n    function _beforeRevokeBudgetApproval(address budgetApproval) internal view override onlyOwner {}\\n\\n    function _assetBalance(address asset) internal view returns (uint256) {\\n        if(asset == Constant.NATIVE_TOKEN) {\\n            return address(this).balance;\\n        }\\n        \\n        return IERC20MetadataUpgradeable(asset).balanceOf(address(this));\\n    }\\n\\n    function _transferAsset(address target, address asset, uint256 amount) internal {\\n        if(asset == Constant.NATIVE_TOKEN) {\\n            (bool success, bytes memory result) = payable(target).call{ value: amount }(\\\"\\\");\\n            if (!success) {\\n                revert TransferFailed(result);\\n            }\\n\\n        } else {\\n            IERC20MetadataUpgradeable(asset).safeTransfer(target, amount);\\n        }\\n    }\\n    \\n    function _afterDeposit(address account, uint256 amount) private {\\n      _dao().afterDeposit(account, amount);\\n    }\\n\\n    function _addAssets(address[] memory erc20s) internal {\\n        for (uint256 i = 0; i < erc20s.length; i++) {\\n            _addAsset(erc20s[i]);\\n        }\\n    }\\n\\n    function _removeAssets(address[] memory erc20s) internal {\\n        for (uint256 i = 0; i < erc20s.length; i++) {\\n            _removeAsset(erc20s[i]);\\n        }\\n    }\\n\\n    function _addAsset(address erc20) internal {\\n        if (isAssetSupported(erc20)) {\\n            revert AssetAlreadyAdded(erc20);\\n        }\\n        if (!canAddAsset(erc20)) {\\n            revert UnsupportedAsset(erc20);\\n        }\\n        assets.push(erc20);\\n        _assetIndex[erc20] = assets.length;\\n\\n        emit AllowDepositToken(erc20);\\n    }\\n\\n    function _removeAsset(address erc20) internal {\\n        if (!isAssetSupported(erc20)) {\\n            revert AssetNotFound(erc20);\\n        }\\n        uint256 index = _assetIndex[erc20] - 1;\\n        address lastEl = assets[assets.length - 1];\\n        assets[index] = lastEl;\\n\\n        _assetIndex[lastEl] = index + 1;\\n        _assetIndex[erc20] = 0;\\n        assets.pop();\\n        emit DisallowDepositToken(erc20);\\n    }\\n\\n    function assetsLength() public view returns(uint256) {\\n        return assets.length;\\n    }\\n    receive() external payable {}\\n\\n    uint256[50] private __gap;\\n}\",\"keccak256\":\"0xa5f10eb9aa2775defbfb351df2c319497ef74515b0494d3a4bd63237ebb3459c\",\"license\":\"GPL-3.0\"},\"contracts/base/BudgetApprovalExecutee.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\\\";\\n\\nimport \\\"../interface/ICommonBudgetApproval.sol\\\";\\nimport \\\"../lib/RevertMsg.sol\\\";\\nimport \\\"../lib/Concat.sol\\\";\\n\\nabstract contract BudgetApprovalExecutee {\\n    using Concat for string;\\n\\n    mapping(address => bool) private _budgetApprovals;\\n\\n    event CreateBudgetApproval(address budgetApproval, bytes data);\\n    event ExecuteByBudgetApproval(address budgetApproval, bytes data);\\n    event RevokeBudgetApproval(address budgetApproval);\\n\\n    error OnlyBudgetApproval();\\n    error InputLengthNotMatch(uint count1, uint count2);\\n    error BudgetApprovalNotExists(address budgetApproval);\\n\\n    modifier onlyBudgetApproval {\\n        if (!budgetApprovals(msg.sender)) {\\n            revert OnlyBudgetApproval();\\n        }\\n        _;\\n    }\\n\\n    function team() public view virtual returns (address);\\n    function accountingSystem() public view virtual returns (address);\\n\\n    function budgetApprovals(address template) public view virtual returns (bool) {\\n        return _budgetApprovals[template];\\n    }\\n\\n    function executeByBudgetApproval(address _to, bytes memory _data, uint256 _value) external onlyBudgetApproval returns (bytes memory) {\\n        (bool success, bytes memory result) = _to.call{ value: _value }(_data);\\n        if(!success) {\\n            revert(string(\\\"Reverted by external contract - \\\").concat(RevertMsg.ToString(result)));\\n        }\\n        emit ExecuteByBudgetApproval(msg.sender, _data);\\n\\n        return result;\\n    }\\n\\n    function _beforeCreateBudgetApproval(address) virtual internal {}\\n\\n    function createBudgetApprovals(address[] memory __budgetApprovals, bytes[] memory data) external virtual {\\n        if (__budgetApprovals.length != data.length) {\\n            revert InputLengthNotMatch(__budgetApprovals.length, data.length);\\n        }\\n\\n        for(uint i = 0; i < __budgetApprovals.length; i++) {\\n            _beforeCreateBudgetApproval(__budgetApprovals[i]);\\n\\n            ERC1967Proxy ba = new ERC1967Proxy(__budgetApprovals[i], data[i]);\\n            _budgetApprovals[address(ba)] = true;\\n            emit CreateBudgetApproval(address(ba), data[i]);\\n\\n            ICommonBudgetApproval(address(ba)).afterInitialized();\\n        }\\n    }\\n\\n    function _beforeRevokeBudgetApproval(address) virtual internal {}\\n\\n    function revokeBudgetApprovals(address[] memory __budgetApprovals) public {\\n        for(uint i = 0; i < __budgetApprovals.length; i++) {\\n            address ba = __budgetApprovals[i];\\n            if (!_budgetApprovals[ba]) {\\n                revert BudgetApprovalNotExists(ba);\\n            }\\n            _beforeRevokeBudgetApproval(ba);\\n\\n            _budgetApprovals[ba] = false;\\n            emit RevokeBudgetApproval(ba);\\n        }\\n    }\\n\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xe2f3e6eeb15e125a61b4669227f18eeb71cea2689c41e4f0ab945e3a93c5b4e2\",\"license\":\"GPL-3.0\"},\"contracts/base/PriceResolver.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.7;\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/Denominations.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"../interface/IAccountingSystem.sol\\\";\\nimport \\\"../lib/Constant.sol\\\";\\n\\nabstract contract PriceResolver {\\n    error PairNotSupport(address asset, address base);\\n\\n    function baseCurrency() public view virtual returns (address);\\n    function accountingSystem() public view virtual returns (address);\\n\\n    /// @notice This function is imported by other contract, thus cannot be external\\n    function assetBaseCurrencyPrice(address asset, uint256 amount) public  view virtual returns (uint256) {\\n        address _baseCurrency = baseCurrency();\\n        address _accountingSystem = accountingSystem();\\n\\n        if (!IAccountingSystem(accountingSystem()).isSupportedPair(asset, baseCurrency())) {\\n            revert PairNotSupport(asset, baseCurrency());\\n        }\\n        return IAccountingSystem(_accountingSystem).assetPrice(asset, _baseCurrency, amount);\\n    }\\n\\n    function assetPrice(address asset, address base, uint256 amount) public  view virtual returns (uint256) {\\n        address _accountingSystem = accountingSystem();\\n        if (!IAccountingSystem(accountingSystem()).isSupportedPair(asset, base)) {\\n            revert PairNotSupport(asset, base);\\n        }\\n        return IAccountingSystem(_accountingSystem).assetPrice(asset, base, amount);\\n    }\\n\\n    function baseCurrencyDecimals() public view virtual returns (uint8) {\\n        address _baseCurrency = baseCurrency();\\n        if (_baseCurrency == Constant.NATIVE_TOKEN) return 18;\\n        try IERC20Metadata(_baseCurrency).decimals() returns (uint8 _decimals) {\\n            return _decimals;\\n        } catch {\\n            return 0;\\n        }\\n    }\\n\\n    /// @notice This function is imported by other contract, thus cannot be external\\n    function canResolvePrice(address asset) public view virtual returns (bool) {\\n       return IAccountingSystem(accountingSystem()).isSupportedPair(asset, baseCurrency());\\n    }\\n}\",\"keccak256\":\"0xcbff56011f83cf8c1980d35b09377d944487944bb199d5ca7b7f141cdae53a8f\",\"license\":\"GPL-3.0\"},\"contracts/interface/IAccountingSystem.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.5.3. SEE SOURCE BELOW. !!\\npragma solidity 0.8.7;\\n\\ninterface IAccountingSystem {\\n    error InputLengthNotMatch(uint256 count1, uint256 count2);\\n    error OwnerNotPermit(address priceGateway);\\n    error PairNotSupport(address asset, address base);\\n    error PriceGatewayExist(address priceGateway);\\n    error PriceGatewayOmit(address priceGateway);\\n    event AddPriceGateway(address priceGateway);\\n    event Initialized(uint8 version);\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    function addPriceGateway(address priceGateway) external;\\n\\n    function assetPrice(\\n        address asset,\\n        address base,\\n        uint256 amount\\n    ) external view returns (uint256);\\n\\n    function defaultPriceGateway() external view returns (address);\\n\\n    function initialize(address[] memory _priceGateways) external;\\n\\n    function isSupportedPair(address asset, address base)\\n        external\\n        view\\n        returns (bool);\\n\\n    function owner() external view returns (address);\\n\\n    function priceGateways(address) external view returns (bool);\\n\\n    function renounceOwnership() external;\\n\\n    function setTokenPairPriceGatewayMap(\\n        address[] memory _assets,\\n        address[] memory _bases,\\n        address priceGateway\\n    ) external;\\n\\n    function tokenPairPriceGatewayMap(address, address)\\n        external\\n        view\\n        returns (address);\\n\\n    function transferOwnership(address newOwner) external;\\n}\\n\\n// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:\\n/*\\n[{\\\"inputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"count1\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"count2\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"InputLengthNotMatch\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"priceGateway\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"OwnerNotPermit\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"asset\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"base\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"PairNotSupport\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"priceGateway\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"PriceGatewayExist\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"priceGateway\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"PriceGatewayOmit\\\",\\\"type\\\":\\\"error\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"priceGateway\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"AddPriceGateway\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint8\\\",\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"uint8\\\"}],\\\"name\\\":\\\"Initialized\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"previousOwner\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"newOwner\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"OwnershipTransferred\\\",\\\"type\\\":\\\"event\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"priceGateway\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"addPriceGateway\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"asset\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"base\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"assetPrice\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"defaultPriceGateway\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"_priceGateways\\\",\\\"type\\\":\\\"address[]\\\"}],\\\"name\\\":\\\"initialize\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"asset\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"base\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"isSupportedPair\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"owner\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"priceGateways\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"renounceOwnership\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"_assets\\\",\\\"type\\\":\\\"address[]\\\"},{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"_bases\\\",\\\"type\\\":\\\"address[]\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"priceGateway\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"setTokenPairPriceGatewayMap\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"tokenPairPriceGatewayMap\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"newOwner\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"transferOwnership\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"}]\\n*/\\n\",\"keccak256\":\"0x924ceea48efb98af443cdf3051dbb1d2e6f7f6e1213ebaacea0239452a0d3de0\",\"license\":\"GPL-3.0\"},\"contracts/interface/ICommonBudgetApproval.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.7;\\n\\ninterface ICommonBudgetApproval {\\n    function afterInitialized() external;\\n}\",\"keccak256\":\"0x682e9bae0b380fd22ee165ed819d467afe875aa36149e9f75cb4bbb0bfb6882b\",\"license\":\"GPL-3.0\"},\"contracts/interface/IDao.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.5.3. SEE SOURCE BELOW. !!\\npragma solidity 0.8.7;\\n\\ninterface IDao {\\n    error BudgetApprovalTemplateNotWhitelisted(address template);\\n    error ContractCallFail(bytes result);\\n    error GovernAlreadyExists(string gName);\\n    error InputLengthNotMatch(uint256 count1, uint256 count2);\\n    error InsufficientDeposit();\\n    error InvalidAddress(address addr);\\n    error InvalidContract(address _contract);\\n    error PluginAlreadyExists(bytes32 contractName);\\n    error PluginNotAllowed(bytes32 contractName);\\n    error PluginRequired(bytes32 contractName);\\n    error Unauthorized();\\n    error UnsupportedDowngrade();\\n    event AddAdmissionToken(\\n        address token,\\n        uint256 minTokenToAdmit,\\n        uint256 tokenId,\\n        bool isMemberToken\\n    );\\n    event AllowDepositToken(address token);\\n    event CreateBudgetApproval(address budgetApproval, bytes data);\\n    event CreateGovern(string name, address govern, address voteToken);\\n    event CreateMember(address account, uint256 depositAmount);\\n    event CreateMemberToken(address token);\\n    event CreatePlugin(bytes32 contractName, address plugin);\\n    event Deposit(address account, uint256 amount);\\n    event ExecuteByBudgetApproval(address budgetApproval, bytes data);\\n    event Initialized(uint8 version);\\n    event RemoveAdmissionToken(address token);\\n    event RevokeBudgetApproval(address budgetApproval);\\n    event SetFirstDepositTime(address owner, uint256 time);\\n    event UpdateDescription(string description);\\n    event UpdateLocktime(uint256 locktime);\\n    event UpdateLogoCID(string logoCID);\\n    event UpdateMinDepositAmount(uint256 amount);\\n    event UpdateName(string newName);\\n    event UpgradeDaoBeacon(address daoBeacon);\\n    event WhitelistTeam(uint256 tokenId);\\n\\n    function accountingSystem() external view returns (address);\\n\\n    function adam() external view returns (address);\\n\\n    function addAssets(address[] memory erc20s) external;\\n\\n    function afterDeposit(address account, uint256 amount) external;\\n\\n    function baseCurrency() external view returns (address);\\n\\n    function budgetApprovals(address template) external view returns (bool);\\n\\n    function byPassGovern(address account) external view returns (bool);\\n\\n    function canAddPriceGateway(address priceGateway)\\n        external\\n        view\\n        returns (bool);\\n\\n    function canCreateBudgetApproval(address budgetApproval)\\n        external\\n        view\\n        returns (bool);\\n\\n    function createBudgetApprovals(\\n        address[] memory __budgetApprovals,\\n        bytes[] memory data\\n    ) external;\\n\\n    function createGovern(\\n        string memory _name,\\n        uint256 quorum,\\n        uint256 passThreshold,\\n        uint8 voteType,\\n        address externalVoteToken,\\n        uint256 durationInBlock\\n    ) external;\\n\\n    function createPlugin(bytes32 contractName, bytes memory data)\\n        external\\n        returns (address);\\n\\n    function creator() external view returns (address);\\n\\n    function description() external view returns (string memory);\\n\\n    function executeByBudgetApproval(\\n        address _to,\\n        bytes memory _data,\\n        uint256 _value\\n    ) external returns (bytes memory);\\n\\n    function executePlugin(\\n        bytes32 contractName,\\n        bytes memory data,\\n        uint256 value\\n    ) external returns (bytes memory);\\n\\n    function firstDepositTime(address) external view returns (uint256);\\n\\n    function govern(string memory) external view returns (address);\\n\\n    function initialize(\\n        address _creator,\\n        string memory _name,\\n        string memory _description,\\n        address _baseCurrency,\\n        bytes[] memory _data\\n    ) external;\\n\\n    function isAssetSupported(address) external view returns (bool);\\n\\n    function isPlugin(address) external view returns (bool);\\n\\n    function liquidPool() external view returns (address);\\n\\n    function locktime() external view returns (uint256);\\n\\n    function logoCID() external view returns (string memory);\\n\\n    function memberToken() external view returns (address);\\n\\n    function membership() external view returns (address);\\n\\n    function minDepositAmount() external view returns (uint256);\\n\\n    function multicall(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory data\\n    ) external returns (bytes[] memory);\\n\\n    function name() external view returns (string memory);\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] memory,\\n        uint256[] memory,\\n        bytes memory\\n    ) external returns (bytes4);\\n\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes memory\\n    ) external returns (bytes4);\\n\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) external returns (bytes4);\\n\\n    function plugins(bytes32) external view returns (address);\\n\\n    function revokeBudgetApprovals(address[] memory __budgetApprovals) external;\\n\\n    function setDescription(string memory _description) external;\\n\\n    function setFirstDepositTime(address owner, uint256 timestamp) external;\\n\\n    function setLocktime(uint256 _locktime) external;\\n\\n    function setLogoCID(string memory _logoCID) external;\\n\\n    function setMinDepositAmount(uint256 _minDepositAmount) external;\\n\\n    function setName(string memory _name) external;\\n\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n\\n    function team() external view returns (address);\\n\\n    function upgradeTo(address _daoBeacon) external;\\n\\n    receive() external payable;\\n}\\n\\n// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:\\n/*\\n[{\\\"inputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"template\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"BudgetApprovalTemplateNotWhitelisted\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"result\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"ContractCallFail\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"gName\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"GovernAlreadyExists\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"count1\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"count2\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"InputLengthNotMatch\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"InsufficientDeposit\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"addr\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"InvalidAddress\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_contract\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"InvalidContract\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"PluginAlreadyExists\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"PluginNotAllowed\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"PluginRequired\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"Unauthorized\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"UnsupportedDowngrade\\\",\\\"type\\\":\\\"error\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"token\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"minTokenToAdmit\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"tokenId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"isMemberToken\\\",\\\"type\\\":\\\"bool\\\"}],\\\"name\\\":\\\"AddAdmissionToken\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"token\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"AllowDepositToken\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"budgetApproval\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"CreateBudgetApproval\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"govern\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"voteToken\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"CreateGovern\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"depositAmount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"CreateMember\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"token\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"CreateMemberToken\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"plugin\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"CreatePlugin\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"Deposit\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"budgetApproval\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"ExecuteByBudgetApproval\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint8\\\",\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"uint8\\\"}],\\\"name\\\":\\\"Initialized\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"token\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"RemoveAdmissionToken\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"budgetApproval\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"RevokeBudgetApproval\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"owner\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"time\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"SetFirstDepositTime\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"description\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"UpdateDescription\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"locktime\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"UpdateLocktime\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"logoCID\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"UpdateLogoCID\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"UpdateMinDepositAmount\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"newName\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"UpdateName\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"daoBeacon\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"UpgradeDaoBeacon\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"tokenId\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"WhitelistTeam\\\",\\\"type\\\":\\\"event\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"accountingSystem\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"adam\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"erc20s\\\",\\\"type\\\":\\\"address[]\\\"}],\\\"name\\\":\\\"addAssets\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"afterDeposit\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"baseCurrency\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"template\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"budgetApprovals\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"byPassGovern\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"priceGateway\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"canAddPriceGateway\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"budgetApproval\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"canCreateBudgetApproval\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"__budgetApprovals\\\",\\\"type\\\":\\\"address[]\\\"},{\\\"internalType\\\":\\\"bytes[]\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes[]\\\"}],\\\"name\\\":\\\"createBudgetApprovals\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_name\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"quorum\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"passThreshold\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"enum Dao.VoteType\\\",\\\"name\\\":\\\"voteType\\\",\\\"type\\\":\\\"uint8\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"externalVoteToken\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"durationInBlock\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"createGovern\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"createPlugin\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"creator\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"description\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"string\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_to\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"_data\\\",\\\"type\\\":\\\"bytes\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_value\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"executeByBudgetApproval\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"executePlugin\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"firstDepositTime\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"govern\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_creator\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_name\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_description\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_baseCurrency\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"bytes[]\\\",\\\"name\\\":\\\"_data\\\",\\\"type\\\":\\\"bytes[]\\\"}],\\\"name\\\":\\\"initialize\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"isAssetSupported\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"isPlugin\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"liquidPool\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"locktime\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"logoCID\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"string\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"memberToken\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"membership\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"minDepositAmount\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"targets\\\",\\\"type\\\":\\\"address[]\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"values\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"internalType\\\":\\\"bytes[]\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes[]\\\"}],\\\"name\\\":\\\"multicall\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes[]\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"name\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"string\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"onERC1155BatchReceived\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes4\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes4\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"onERC1155Received\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes4\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes4\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"onERC721Received\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes4\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes4\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"plugins\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"__budgetApprovals\\\",\\\"type\\\":\\\"address[]\\\"}],\\\"name\\\":\\\"revokeBudgetApprovals\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_description\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"setDescription\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"owner\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"timestamp\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"setFirstDepositTime\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_locktime\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"setLocktime\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_logoCID\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"setLogoCID\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_minDepositAmount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"setMinDepositAmount\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_name\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"setName\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes4\\\",\\\"name\\\":\\\"interfaceId\\\",\\\"type\\\":\\\"bytes4\\\"}],\\\"name\\\":\\\"supportsInterface\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"team\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_daoBeacon\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"upgradeTo\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"stateMutability\\\":\\\"payable\\\",\\\"type\\\":\\\"receive\\\"}]\\n*/\\n\",\"keccak256\":\"0xbdfc24ea8ea156e1ebcb3545037e5765f04ef8f54e3c1cea7bcdd77a7b9f621b\",\"license\":\"GPL-3.0\"},\"contracts/lib/Concat.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.7;\\n\\nlibrary Concat {\\n    function concat(string memory a, string memory b) internal pure returns(string memory) {\\n        return string(abi.encodePacked(a, b));\\n    }\\n}\\n\",\"keccak256\":\"0x013aedf863782ff429fb053610335e62c45e5b63bcbb48a5427e1630e1eb7d7b\",\"license\":\"GPL-3.0\"},\"contracts/lib/Constant.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.7;\\n\\nlibrary Constant {\\n    bytes32 public constant BEACON_NAME_DAO = bytes32(keccak256(\\\"adam.dao\\\"));\\n    bytes32 public constant BEACON_NAME_MEMBERSHIP = bytes32(keccak256(\\\"adam.dao.membership\\\"));\\n    bytes32 public constant BEACON_NAME_MEMBER_TOKEN = bytes32(keccak256(\\\"adam.dao.member_token\\\"));\\n    bytes32 public constant BEACON_NAME_LIQUID_POOL = bytes32(keccak256(\\\"adam.dao.liquid_pool\\\"));\\n    bytes32 public constant BEACON_NAME_GOVERN = bytes32(keccak256(\\\"adam.dao.govern\\\"));\\n    bytes32 public constant BEACON_NAME_TEAM = bytes32(keccak256(\\\"adam.dao.team\\\"));\\n    bytes32 public constant BEACON_NAME_ACCOUNTING_SYSTEM = bytes32(keccak256(\\\"adam.dao.accounting_system\\\"));\\n\\n    address public constant WETH_ADDRESS = 0x40155AD14A14C6F7A3116dafb279160D9761c606;\\n    address public constant MATIC_ADDRESS = 0x0000000000000000000000000000000000001010;\\n    address public constant WMATIC_ADDRESS = 0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889;\\n    address public constant UNISWAP_ROUTER = 0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45;\\n    address public constant FEED_REGISTRY = 0xe74B6321545aD397E08AdB12d83983eB8e6F4062;\\n    address public constant BRIDGE_CURRENCY = 0x0000000000000000000000000000000000000348;\\n    address public constant NATIVE_TOKEN = 0x0000000000000000000000000000000000001010;\\n    uint public constant STALE_PRICE_DELAY = 86400;\\n}\\n\",\"keccak256\":\"0xbec7198cb6276218381a60f3630bb50a9433d04522f879ec5339547dc9028601\",\"license\":\"GPL-3.0\"},\"contracts/lib/RevertMsg.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.7;\\nimport \\\"../lib/Concat.sol\\\";\\n\\nlibrary RevertMsg {\\n    using Concat for string;\\n    function ToString(bytes memory _returnData) internal pure returns (string memory) {\\n        // If the _res length is less than 68, then the transaction failed silently (without a revert message)\\n        if (_returnData.length < 68) return \\\"\\\";\\n\\n        assembly {\\n            // Slice the sighash.\\n            _returnData := add(_returnData, 0x04)\\n        }\\n        return abi.decode(_returnData, (string)); // All that remains is the revert string\\n    }\\n}\",\"keccak256\":\"0x38c8bdee92e0082da81d7e9c853815000b1f03f15c2d2684078252d7feb15af3\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b613bb280620000f46000396000f3fe608060405260043610620002635760003560e01c8063a240663e1162000147578063db006a7511620000b9578063ed1bd76c1162000078578063ed1bd76c1462000754578063f2fde38b1462000779578063f340fa01146200079e578063f50477a214620007b5578063fb0f97a814620007cc57600080fd5b8063db006a75146200069b578063dd62ed3e14620006c0578063df30e97c14620006e5578063df79812e146200070a578063e019c23c146200072f57600080fd5b8063bc9c5e901162000106578063bc9c5e9014620005ef578063c6a0a68a1462000614578063cf35bdd0146200062c578063d00e8ed01462000651578063d3abc28b146200067657600080fd5b8063a240663e146200052b578063a457c2d71462000568578063a9059cbb146200058d578063ab0d92dd14620005b2578063aea321c614620005ca57600080fd5b8063608e091211620001e1578063715018a611620001a0578063715018a614620004a357806385f2aef214620004bb5780638da5cb5b14620004d357806392a85fde14620004f357806395d89b41146200051357600080fd5b8063608e091214620003d657806360d8bb22146200040757806363d727dc146200042c5780636f7a4b23146200044457806370a08231146200046957600080fd5b806330c88fd7116200022e57806330c88fd7146200031c578063313ce5671462000341578063395093511462000365578063462d0b2e146200038a578063464b415814620003b157600080fd5b806306fdde031462000270578063095ea7b314620002a057806318160ddd14620002d657806323b872dd14620002f757600080fd5b366200026b57005b600080fd5b3480156200027d57600080fd5b5062000288620007f1565b60405162000297919062003203565b60405180910390f35b348015620002ad57600080fd5b50620002c5620002bf36600462002e2d565b6200088b565b604051901515815260200162000297565b348015620002e357600080fd5b506035545b60405190815260200162000297565b3480156200030457600080fd5b50620002c56200031636600462002d88565b620008a7565b3480156200032957600080fd5b50620002e86200033b36600462002e2d565b620008d1565b3480156200034e57600080fd5b5060125b60405160ff909116815260200162000297565b3480156200037257600080fd5b50620002c56200038436600462002e2d565b62000979565b3480156200039757600080fd5b50620003af620003a936600462002f0f565b620009a1565b005b348015620003be57600080fd5b50620002c5620003d036600462002d0a565b62000b67565b348015620003e357600080fd5b50620003ee62000b84565b6040516001600160a01b03909116815260200162000297565b3480156200041457600080fd5b50620002e86200042636600462002e2d565b62000c09565b3480156200043957600080fd5b506200035262000db2565b3480156200045157600080fd5b50620002c56200046336600462002d0a565b62000e64565b3480156200047657600080fd5b50620002e86200048836600462002d0a565b6001600160a01b031660009081526033602052604090205490565b348015620004b057600080fd5b50620003af62000e71565b348015620004c857600080fd5b50620003ee62000e89565b348015620004e057600080fd5b506098546001600160a01b0316620003ee565b3480156200050057600080fd5b5060ca546001600160a01b0316620003ee565b3480156200052057600080fd5b506200028862000ece565b3480156200053857600080fd5b50620002c56200054a36600462002d0a565b6001600160a01b031660009081526065602052604090205460ff1690565b3480156200057557600080fd5b50620002c56200058736600462002e2d565b62000edf565b3480156200059a57600080fd5b50620002c5620005ac36600462002e2d565b62000f6b565b348015620005bf57600080fd5b50620002e862000f7b565b348015620005d757600080fd5b50620003af620005e936600462002e5c565b62000ffa565b348015620005fc57600080fd5b50620002c56200060e36600462002d0a565b62001046565b3480156200062157600080fd5b50620002e8620010f6565b3480156200063957600080fd5b50620003ee6200064b366004620030e1565b62001170565b3480156200065e57600080fd5b50620003af6200067036600462002ed6565b6200119b565b3480156200068357600080fd5b50620002886200069536600462002dce565b6200128a565b348015620006a857600080fd5b50620003af620006ba366004620030e1565b620013d4565b348015620006cd57600080fd5b50620002e8620006df36600462002d4a565b620015aa565b348015620006f257600080fd5b50620003af6200070436600462002e5c565b620015d5565b3480156200071757600080fd5b50620003af6200072936600462002f5c565b6200161d565b3480156200073c57600080fd5b50620002e86200074e36600462002d88565b620017e4565b3480156200076157600080fd5b50620002e862000773366004620030e1565b620018e8565b3480156200078657600080fd5b50620003af6200079836600462002d0a565b62001926565b620003af620007af36600462002d0a565b620019a5565b348015620007c257600080fd5b5060cb54620002e8565b348015620007d957600080fd5b50620003af620007eb36600462002d88565b62001ada565b606060368054620008029062003392565b80601f0160208091040260200160405190810160405280929190818152602001828054620008309062003392565b8015620008815780601f10620008555761010080835404028352916020019162000881565b820191906000526020600020905b8154815290600101906020018083116200086357829003601f168201915b5050505050905090565b6000336200089b81858562001b87565b60019150505b92915050565b600033620008b785828562001caf565b620008c485858562001d30565b60019150505b9392505050565b600080620008de60355490565b905080831115620009025760405163162908e360e11b815260040160405180910390fd5b6200090d8462000b67565b6200093b5760405163ee84f40b60e01b81526001600160a01b03851660048201526024015b60405180910390fd5b806200094c576000915050620008a1565b8083620009598662001f08565b62000965919062003327565b62000971919062003304565b949350505050565b6000336200089b8185856200098f8383620015aa565b6200099b9190620032e9565b62001b87565b600054610100900460ff1615808015620009c25750600054600160ff909116105b80620009de5750303b158015620009de575060005460ff166001145b62000a435760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000932565b6000805460ff19166001179055801562000a67576000805461ff0019166101001790555b62000a7162001fa0565b62000a8e62000a7f62000b84565b6001600160a01b03163b151590565b62000aac5760405163da11b66d60e01b815260040160405180910390fd5b62000af46040518060400160405280600a815260200169131a5c5d5a59141bdbdb60b21b8152506040518060400160405280600281526020016104c560f41b81525062001fd4565b60ca80546001600160a01b0319166001600160a01b03841617905562000b1a836200200a565b801562000b62576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b505050565b6001600160a01b0316600090815260cc6020526040902054151590565b600062000b9062002053565b6001600160a01b031663608e09126040518163ffffffff1660e01b815260040160206040518083038186803b15801562000bc957600080fd5b505afa15801562000bde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c04919062002d2a565b905090565b60008062000c1f60ca546001600160a01b031690565b9050600062000c2d62000b84565b905062000c3962000b84565b6001600160a01b031663ce58da338662000c5b60ca546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160206040518083038186803b15801562000ca257600080fd5b505afa15801562000cb7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cdd919062003046565b62000d23578462000cf660ca546001600160a01b031690565b604051633d487fe560e11b81526001600160a01b0392831660048201529116602482015260440162000932565b604051633806708f60e21b81526001600160a01b0382169063e019c23c9062000d5590889086908990600401620031b9565b60206040518083038186803b15801562000d6e57600080fd5b505afa15801562000d83573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000da99190620030fb565b95945050505050565b60008062000dc860ca546001600160a01b031690565b90506001600160a01b038116611010141562000de657601291505090565b806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801562000e2057600080fd5b505afa92505050801562000e53575060408051601f3d908101601f1916820190925262000e509181019062003115565b60015b620008a157600091505090565b5090565b6000620008a18262001046565b62000e7b62002068565b62000e876000620020c4565b565b600062000e9562002053565b6001600160a01b03166385f2aef26040518163ffffffff1660e01b815260040160206040518083038186803b15801562000bc957600080fd5b606060378054620008029062003392565b6000338162000eef8286620015aa565b90508381101562000f515760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840162000932565b62000f60828686840362001b87565b506001949350505050565b6000336200089b81858562001d30565b60cb546000908190815b8181101562000ff257600060cb828154811062000fa65762000fa662003419565b6000918252602090912001546001600160a01b0316905062000fcd81620004268162001f08565b62000fd99085620032e9565b935050808062000fe990620033cf565b91505062000f85565b509092915050565b6200100462002068565b620010428282808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506200200a92505050565b5050565b60006200105262000b84565b6001600160a01b031663ce58da33836200107460ca546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160206040518083038186803b158015620010bb57600080fd5b505afa158015620010d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a1919062003046565b60cb546000908190815b8181101562000ff257600060cb828154811062001121576200112162003419565b6000918252602090912001546001600160a01b031690506200114b816110106200074e8262001f08565b620011579085620032e9565b93505080806200116790620033cf565b91505062001100565b60cb81815481106200118157600080fd5b6000918252602090912001546001600160a01b0316905081565b60005b815181101562001042576000828281518110620011bf57620011bf62003419565b6020908102919091018101516001600160a01b0381166000908152606590925260409091205490915060ff16620012155760405163122ab6a960e21b81526001600160a01b038216600482015260240162000932565b620012208162002116565b6001600160a01b038116600081815260656020908152604091829020805460ff1916905590519182527f3562b8c49e34d53119756b2b8b55a910ed22c2cda0d3b07398510d804c2dc621910160405180910390a150806200128181620033cf565b9150506200119e565b3360009081526065602052604090205460609060ff16620012be57604051639d5b229960e01b815260040160405180910390fd5b600080856001600160a01b03168486604051620012dc919062003168565b60006040518083038185875af1925050503d80600081146200131b576040519150601f19603f3d011682016040523d82523d6000602084013e62001320565b606091505b5091509150816200139057620013756200133a8262002120565b6040805180820190915260208082527f52657665727465642062792065787465726e616c20636f6e7472616374202d2090820152906200215d565b60405162461bcd60e51b815260040162000932919062003203565b7fcf452d48646654954090c61dd69f99a99bea4e2264594078fc81bfd43d6f6a9e3386604051620013c3929190620031dd565b60405180910390a195945050505050565b6000620013e062002053565b33600090815260336020526040902054909150821115620014145760405163162908e360e11b815260040160405180910390fd5b42816001600160a01b03166361c533b46040518163ffffffff1660e01b815260040160206040518083038186803b1580156200144f57600080fd5b505afa15801562001464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200148a9190620030fb565b604051636cb7c6f960e01b81523360048201526001600160a01b03841690636cb7c6f99060240160206040518083038186803b158015620014ca57600080fd5b505afa158015620014df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015059190620030fb565b620015119190620032e9565b11156200153157604051631a874cc960e11b815260040160405180910390fd5b60cb5460005b818110156200159d57600060cb828154811062001558576200155862003419565b6000918252602090912001546001600160a01b03169050620015873382620015818189620008d1565b6200218b565b50806200159481620033cf565b91505062001537565b5062000b62338462002239565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b620015df62002068565b620010428282808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506200238d92505050565b80518251146200164e57815181516040516341a0572360e01b81526004810192909252602482015260440162000932565b60005b825181101562000b62576200168283828151811062001674576200167462003419565b6020026020010151620023d6565b600083828151811062001699576200169962003419565b6020026020010151838381518110620016b657620016b662003419565b6020026020010151604051620016cc9062002b85565b620016d9929190620031dd565b604051809103906000f080158015620016f6573d6000803e3d6000fd5b506001600160a01b0381166000908152606560205260409020805460ff1916600117905583519091507f26c79e13dd63e8716f130c25331c09f2fdd55d6880bbfa7bcc38868207e8a67090829085908590811062001758576200175862003419565b602002602001015160405162001770929190620031dd565b60405180910390a1806001600160a01b031663cf26fec66040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620017b457600080fd5b505af1158015620017c9573d6000803e3d6000fd5b50505050508080620017db90620033cf565b91505062001651565b600080620017f162000b84565b9050620017fd62000b84565b60405163ce58da3360e01b81526001600160a01b0387811660048301528681166024830152919091169063ce58da339060440160206040518083038186803b1580156200184957600080fd5b505afa1580156200185e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001884919062003046565b620018b657604051633d487fe560e11b81526001600160a01b0380871660048301528516602482015260440162000932565b604051633806708f60e21b81526001600160a01b0382169063e019c23c9062000d5590889088908890600401620031b9565b600080620018f560355490565b90508062001904575090919050565b6200190e62000f7b565b6200191a828562003327565b620008ca919062003304565b6200193062002068565b6001600160a01b038116620019975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000932565b620019a281620020c4565b50565b620019b261101062000b67565b620019d55760405163ee84f40b60e01b8152611010600482015260240162000932565b6000620019e160355490565b90506000620019f36110103462000c09565b90508162001a4a5762001a07838262002493565b62001a13838262002578565b7f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62836110103460405162000b5993929190620031b9565b60008162001a5762000f7b565b62001a63919062003349565b905062001a89848262001a77868662003327565b62001a83919062003304565b62002493565b62001a95848362002578565b7f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62846110103460405162001acc93929190620031b9565b60405180910390a150505050565b62001ae58262000b67565b62001b0f5760405163ee84f40b60e01b81526001600160a01b038316600482015260240162000932565b600062001b1d838362000c09565b905062001b2f8462001a8383620018e8565b62001b466001600160a01b038416333085620025ec565b62001b52848262002578565b7f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6284848460405162001acc93929190620031b9565b6001600160a01b03831662001beb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840162000932565b6001600160a01b03821662001c4e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840162000932565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600062001cbd8484620015aa565b9050600019811462001d2a578181101562001d1b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640162000932565b62001d2a848484840362001b87565b50505050565b6001600160a01b03831662001d965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840162000932565b6001600160a01b03821662001dfa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840162000932565b6001600160a01b0383166000908152603360205260409020548181101562001e745760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840162000932565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929062001ead908490620032e9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405162001efa91815260200190565b60405180910390a362001d2a565b60006001600160a01b038216611010141562001f25575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b15801562001f6557600080fd5b505afa15801562001f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a19190620030fb565b600054610100900460ff1662001fca5760405162461bcd60e51b8152600401620009329062003218565b62000e8762002648565b600054610100900460ff1662001ffe5760405162461bcd60e51b8152600401620009329062003218565b6200104282826200267d565b60005b815181101562001042576200203e82828151811062002030576200203062003419565b6020026020010151620026d2565b806200204a81620033cf565b9150506200200d565b600062000c046098546001600160a01b031690565b6098546001600160a01b0316331462000e875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000932565b609880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620019a262002068565b60606044825110156200214157505060408051602081019091526000815290565b60048201915081806020019051810190620008a191906200306a565b606082826040516020016200217492919062003186565b604051602081830303815290604052905092915050565b6001600160a01b03821661101014156200222357600080846001600160a01b03168360405160006040518083038185875af1925050503d8060008114620021ef576040519150601f19603f3d011682016040523d82523d6000602084013e620021f4565b606091505b5091509150816200221c5780604051639a367e1760e01b815260040162000932919062003203565b5050505050565b62000b626001600160a01b0383168483620027cf565b6001600160a01b0382166200229b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840162000932565b6001600160a01b03821660009081526033602052604090205481811015620023115760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840162000932565b6001600160a01b03831660009081526033602052604081208383039055603580548492906200234290849062003349565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60005b81518110156200104257620023c1828281518110620023b357620023b362003419565b602002602001015162002801565b80620023cd81620033cf565b91505062002390565b620023e062002068565b620023ea62002053565b604051633b42d9af60e21b81526001600160a01b038381166004830152919091169063ed0b66bc9060240160206040518083038186803b1580156200242e57600080fd5b505afa15801562002443573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002469919062003046565b620019a257604051635ef0ef1560e01b81526001600160a01b038216600482015260240162000932565b6001600160a01b038216620024eb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000932565b8060356000828254620024ff9190620032e9565b90915550506001600160a01b038216600090815260336020526040812080548392906200252e908490620032e9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6200258262002053565b604051631c783fd360e31b81526001600160a01b03848116600483015260248201849052919091169063e3c1fe9890604401600060405180830381600087803b158015620025cf57600080fd5b505af1158015620025e4573d6000803e3d6000fd5b505050505050565b62001d2a846323b872dd60e01b8585856040516024016200261093929190620031b9565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526200298a565b600054610100900460ff16620026725760405162461bcd60e51b8152600401620009329062003218565b62000e8733620020c4565b600054610100900460ff16620026a75760405162461bcd60e51b8152600401620009329062003218565b8151620026bc90603690602085019062002b93565b50805162000b6290603790602084019062002b93565b620026dd8162000b67565b15620027085760405163371d045b60e21b81526001600160a01b038216600482015260240162000932565b620027138162000e64565b6200273d5760405163ee84f40b60e01b81526001600160a01b038216600482015260240162000932565b60cb80546001810182557fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb0180546001600160a01b0319166001600160a01b0384169081179091559054600082815260cc602090815260409182902092909255519182527f808665eda000f8d729f31a384bae411282aa3be62cb73ed74e2225e2eef7125d910160405180910390a150565b6040516001600160a01b03831660248201526044810182905262000b6290849063a9059cbb60e01b9060640162002610565b6200280c8162000b67565b620028365760405163067c787f60e41b81526001600160a01b038216600482015260240162000932565b6001600160a01b038116600090815260cc60205260408120546200285d9060019062003349565b60cb8054919250600091620028759060019062003349565b8154811062002888576200288862003419565b60009182526020909120015460cb80546001600160a01b039092169250829184908110620028ba57620028ba62003419565b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055620028f0826001620032e9565b6001600160a01b03808316600090815260cc60205260408082209390935590851681529081205560cb8054806200292b576200292b62003403565b6000828152602090819020600019908301810180546001600160a01b03191690559091019091556040516001600160a01b03851681527f289634222e6533fbe86ba920f2c134b0c959102a872f93ccc13ca9346a93f2f9910162000b59565b6000620029e1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662002a639092919063ffffffff16565b80519091501562000b62578080602001905181019062002a02919062003046565b62000b625760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000932565b6060620009718484600085856001600160a01b0385163b62002ac85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000932565b600080866001600160a01b0316858760405162002ae6919062003168565b60006040518083038185875af1925050503d806000811462002b25576040519150601f19603f3d011682016040523d82523d6000602084013e62002b2a565b606091505b509150915062002b3c82828662002b47565b979650505050505050565b6060831562002b58575081620008ca565b82511562002b695782518084602001fd5b8160405162461bcd60e51b815260040162000932919062003203565b610721806200345c83390190565b82805462002ba19062003392565b90600052602060002090601f01602090048101928262002bc5576000855562002c10565b82601f1062002be057805160ff191683800117855562002c10565b8280016001018555821562002c10579182015b8281111562002c1057825182559160200191906001019062002bf3565b5062000e609291505b8082111562000e60576000815560010162002c19565b600082601f83011262002c4157600080fd5b8135602062002c5a62002c548362003297565b62003263565b80838252828201915082860187848660051b890101111562002c7b57600080fd5b60005b8581101562002ca757813562002c948162003445565b8452928401929084019060010162002c7e565b5090979650505050505050565b600082601f83011262002cc657600080fd5b813562002cd762002c5482620032be565b81815284602083860101111562002ced57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121562002d1d57600080fd5b8135620008ca8162003445565b60006020828403121562002d3d57600080fd5b8151620008ca8162003445565b6000806040838503121562002d5e57600080fd5b823562002d6b8162003445565b9150602083013562002d7d8162003445565b809150509250929050565b60008060006060848603121562002d9e57600080fd5b833562002dab8162003445565b9250602084013562002dbd8162003445565b929592945050506040919091013590565b60008060006060848603121562002de457600080fd5b833562002df18162003445565b9250602084013567ffffffffffffffff81111562002e0e57600080fd5b62002e1c8682870162002cb4565b925050604084013590509250925092565b6000806040838503121562002e4157600080fd5b823562002e4e8162003445565b946020939093013593505050565b6000806020838503121562002e7057600080fd5b823567ffffffffffffffff8082111562002e8957600080fd5b818501915085601f83011262002e9e57600080fd5b81358181111562002eae57600080fd5b8660208260051b850101111562002ec457600080fd5b60209290920196919550909350505050565b60006020828403121562002ee957600080fd5b813567ffffffffffffffff81111562002f0157600080fd5b620009718482850162002c2f565b6000806040838503121562002f2357600080fd5b823567ffffffffffffffff81111562002f3b57600080fd5b62002f498582860162002c2f565b925050602083013562002d7d8162003445565b6000806040838503121562002f7057600080fd5b823567ffffffffffffffff8082111562002f8957600080fd5b62002f978683870162002c2f565b935060209150818501358181111562002faf57600080fd5b8501601f8101871362002fc157600080fd5b803562002fd262002c548262003297565b8082825285820191508584018a878560051b870101111562002ff357600080fd5b6000805b8581101562003033578235888111156200300f578283fd5b6200301f8e8b838b010162002cb4565b865250938801939188019160010162002ff7565b5050508096505050505050509250929050565b6000602082840312156200305957600080fd5b81518015158114620008ca57600080fd5b6000602082840312156200307d57600080fd5b815167ffffffffffffffff8111156200309557600080fd5b8201601f81018413620030a757600080fd5b8051620030b862002c5482620032be565b818152856020838501011115620030ce57600080fd5b62000da982602083016020860162003363565b600060208284031215620030f457600080fd5b5035919050565b6000602082840312156200310e57600080fd5b5051919050565b6000602082840312156200312857600080fd5b815160ff81168114620008ca57600080fd5b600081518084526200315481602086016020860162003363565b601f01601f19169290920160200192915050565b600082516200317c81846020870162003363565b9190910192915050565b600083516200319a81846020880162003363565b835190830190620031b081836020880162003363565b01949350505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038316815260406020820181905260009062000971908301846200313a565b602081526000620008ca60208301846200313a565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff811182821017156200328f576200328f6200342f565b604052919050565b600067ffffffffffffffff821115620032b457620032b46200342f565b5060051b60200190565b600067ffffffffffffffff821115620032db57620032db6200342f565b50601f01601f191660200190565b60008219821115620032ff57620032ff620033ed565b500190565b6000826200332257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615620033445762003344620033ed565b500290565b6000828210156200335e576200335e620033ed565b500390565b60005b838110156200338057818101518382015260200162003366565b8381111562001d2a5750506000910152565b600181811c90821680620033a757607f821691505b60208210811415620033c957634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415620033e657620033e6620033ed565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620019a257600080fdfe6080604052604051610721380380610721833981016040819052610022916102d2565b61002e82826000610035565b5050610431565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d083836040518060600160405280602781526020016106fa602791396101a9565b9392505050565b6100ea8161028760201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61029660201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102115760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610148565b600080856001600160a01b03168560405161022c91906103a0565b600060405180830381855af49150503d8060008114610267576040519150601f19603f3d011682016040523d82523d6000602084013e61026c565b606091505b50909250905061027d828286610299565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a85750816100d0565b8251156102b85782518084602001fd5b8160405162461bcd60e51b815260040161014891906103bc565b600080604083850312156102e557600080fd5b82516001600160a01b03811681146102fc57600080fd5b60208401519092506001600160401b038082111561031957600080fd5b818501915085601f83011261032d57600080fd5b81518181111561033f5761033f61041b565b604051601f8201601f19908116603f011681019083821181831017156103675761036761041b565b8160405282815288602084870101111561038057600080fd5b6103918360208301602088016103ef565b80955050505050509250929050565b600082516103b28184602087016103ef565b9190910192915050565b60208152600082518060208401526103db8160408501602087016103ef565b601f01601f19169190910160400192915050565b60005b8381101561040a5781810151838201526020016103f2565b838111156100645750506000910152565b634e487b7160e01b600052604160045260246000fd5b6102ba806104406000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025e602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b60606001600160a01b0384163b6101305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161014b91906101de565b600060405180830381855af49150503d8060008114610186576040519150601f19603f3d011682016040523d82523d6000602084013e61018b565b606091505b509150915061019b8282866101a5565b9695505050505050565b606083156101b457508161004e565b8251156101c45782518084602001fd5b8160405162461bcd60e51b815260040161012791906101fa565b600082516101f081846020870161022d565b9190910192915050565b602081526000825180602084015261021981604085016020870161022d565b601f01601f19169190910160400192915050565b60005b83811015610248578181015183820152602001610230565b83811115610257576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220fb537d1df0a2f3ea0050d30fb82ca020f06a83116d3853b9eda518a67b0c9be764736f6c63430008070033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207cb932f633484d0dd5191704bf62f1a15e840ecaf21955fd17494b22bae3fc1c64736f6c63430008070033",
  "deployedBytecode": "0x608060405260043610620002635760003560e01c8063a240663e1162000147578063db006a7511620000b9578063ed1bd76c1162000078578063ed1bd76c1462000754578063f2fde38b1462000779578063f340fa01146200079e578063f50477a214620007b5578063fb0f97a814620007cc57600080fd5b8063db006a75146200069b578063dd62ed3e14620006c0578063df30e97c14620006e5578063df79812e146200070a578063e019c23c146200072f57600080fd5b8063bc9c5e901162000106578063bc9c5e9014620005ef578063c6a0a68a1462000614578063cf35bdd0146200062c578063d00e8ed01462000651578063d3abc28b146200067657600080fd5b8063a240663e146200052b578063a457c2d71462000568578063a9059cbb146200058d578063ab0d92dd14620005b2578063aea321c614620005ca57600080fd5b8063608e091211620001e1578063715018a611620001a0578063715018a614620004a357806385f2aef214620004bb5780638da5cb5b14620004d357806392a85fde14620004f357806395d89b41146200051357600080fd5b8063608e091214620003d657806360d8bb22146200040757806363d727dc146200042c5780636f7a4b23146200044457806370a08231146200046957600080fd5b806330c88fd7116200022e57806330c88fd7146200031c578063313ce5671462000341578063395093511462000365578063462d0b2e146200038a578063464b415814620003b157600080fd5b806306fdde031462000270578063095ea7b314620002a057806318160ddd14620002d657806323b872dd14620002f757600080fd5b366200026b57005b600080fd5b3480156200027d57600080fd5b5062000288620007f1565b60405162000297919062003203565b60405180910390f35b348015620002ad57600080fd5b50620002c5620002bf36600462002e2d565b6200088b565b604051901515815260200162000297565b348015620002e357600080fd5b506035545b60405190815260200162000297565b3480156200030457600080fd5b50620002c56200031636600462002d88565b620008a7565b3480156200032957600080fd5b50620002e86200033b36600462002e2d565b620008d1565b3480156200034e57600080fd5b5060125b60405160ff909116815260200162000297565b3480156200037257600080fd5b50620002c56200038436600462002e2d565b62000979565b3480156200039757600080fd5b50620003af620003a936600462002f0f565b620009a1565b005b348015620003be57600080fd5b50620002c5620003d036600462002d0a565b62000b67565b348015620003e357600080fd5b50620003ee62000b84565b6040516001600160a01b03909116815260200162000297565b3480156200041457600080fd5b50620002e86200042636600462002e2d565b62000c09565b3480156200043957600080fd5b506200035262000db2565b3480156200045157600080fd5b50620002c56200046336600462002d0a565b62000e64565b3480156200047657600080fd5b50620002e86200048836600462002d0a565b6001600160a01b031660009081526033602052604090205490565b348015620004b057600080fd5b50620003af62000e71565b348015620004c857600080fd5b50620003ee62000e89565b348015620004e057600080fd5b506098546001600160a01b0316620003ee565b3480156200050057600080fd5b5060ca546001600160a01b0316620003ee565b3480156200052057600080fd5b506200028862000ece565b3480156200053857600080fd5b50620002c56200054a36600462002d0a565b6001600160a01b031660009081526065602052604090205460ff1690565b3480156200057557600080fd5b50620002c56200058736600462002e2d565b62000edf565b3480156200059a57600080fd5b50620002c5620005ac36600462002e2d565b62000f6b565b348015620005bf57600080fd5b50620002e862000f7b565b348015620005d757600080fd5b50620003af620005e936600462002e5c565b62000ffa565b348015620005fc57600080fd5b50620002c56200060e36600462002d0a565b62001046565b3480156200062157600080fd5b50620002e8620010f6565b3480156200063957600080fd5b50620003ee6200064b366004620030e1565b62001170565b3480156200065e57600080fd5b50620003af6200067036600462002ed6565b6200119b565b3480156200068357600080fd5b50620002886200069536600462002dce565b6200128a565b348015620006a857600080fd5b50620003af620006ba366004620030e1565b620013d4565b348015620006cd57600080fd5b50620002e8620006df36600462002d4a565b620015aa565b348015620006f257600080fd5b50620003af6200070436600462002e5c565b620015d5565b3480156200071757600080fd5b50620003af6200072936600462002f5c565b6200161d565b3480156200073c57600080fd5b50620002e86200074e36600462002d88565b620017e4565b3480156200076157600080fd5b50620002e862000773366004620030e1565b620018e8565b3480156200078657600080fd5b50620003af6200079836600462002d0a565b62001926565b620003af620007af36600462002d0a565b620019a5565b348015620007c257600080fd5b5060cb54620002e8565b348015620007d957600080fd5b50620003af620007eb36600462002d88565b62001ada565b606060368054620008029062003392565b80601f0160208091040260200160405190810160405280929190818152602001828054620008309062003392565b8015620008815780601f10620008555761010080835404028352916020019162000881565b820191906000526020600020905b8154815290600101906020018083116200086357829003601f168201915b5050505050905090565b6000336200089b81858562001b87565b60019150505b92915050565b600033620008b785828562001caf565b620008c485858562001d30565b60019150505b9392505050565b600080620008de60355490565b905080831115620009025760405163162908e360e11b815260040160405180910390fd5b6200090d8462000b67565b6200093b5760405163ee84f40b60e01b81526001600160a01b03851660048201526024015b60405180910390fd5b806200094c576000915050620008a1565b8083620009598662001f08565b62000965919062003327565b62000971919062003304565b949350505050565b6000336200089b8185856200098f8383620015aa565b6200099b9190620032e9565b62001b87565b600054610100900460ff1615808015620009c25750600054600160ff909116105b80620009de5750303b158015620009de575060005460ff166001145b62000a435760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000932565b6000805460ff19166001179055801562000a67576000805461ff0019166101001790555b62000a7162001fa0565b62000a8e62000a7f62000b84565b6001600160a01b03163b151590565b62000aac5760405163da11b66d60e01b815260040160405180910390fd5b62000af46040518060400160405280600a815260200169131a5c5d5a59141bdbdb60b21b8152506040518060400160405280600281526020016104c560f41b81525062001fd4565b60ca80546001600160a01b0319166001600160a01b03841617905562000b1a836200200a565b801562000b62576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b505050565b6001600160a01b0316600090815260cc6020526040902054151590565b600062000b9062002053565b6001600160a01b031663608e09126040518163ffffffff1660e01b815260040160206040518083038186803b15801562000bc957600080fd5b505afa15801562000bde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c04919062002d2a565b905090565b60008062000c1f60ca546001600160a01b031690565b9050600062000c2d62000b84565b905062000c3962000b84565b6001600160a01b031663ce58da338662000c5b60ca546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160206040518083038186803b15801562000ca257600080fd5b505afa15801562000cb7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cdd919062003046565b62000d23578462000cf660ca546001600160a01b031690565b604051633d487fe560e11b81526001600160a01b0392831660048201529116602482015260440162000932565b604051633806708f60e21b81526001600160a01b0382169063e019c23c9062000d5590889086908990600401620031b9565b60206040518083038186803b15801562000d6e57600080fd5b505afa15801562000d83573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000da99190620030fb565b95945050505050565b60008062000dc860ca546001600160a01b031690565b90506001600160a01b038116611010141562000de657601291505090565b806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801562000e2057600080fd5b505afa92505050801562000e53575060408051601f3d908101601f1916820190925262000e509181019062003115565b60015b620008a157600091505090565b5090565b6000620008a18262001046565b62000e7b62002068565b62000e876000620020c4565b565b600062000e9562002053565b6001600160a01b03166385f2aef26040518163ffffffff1660e01b815260040160206040518083038186803b15801562000bc957600080fd5b606060378054620008029062003392565b6000338162000eef8286620015aa565b90508381101562000f515760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840162000932565b62000f60828686840362001b87565b506001949350505050565b6000336200089b81858562001d30565b60cb546000908190815b8181101562000ff257600060cb828154811062000fa65762000fa662003419565b6000918252602090912001546001600160a01b0316905062000fcd81620004268162001f08565b62000fd99085620032e9565b935050808062000fe990620033cf565b91505062000f85565b509092915050565b6200100462002068565b620010428282808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506200200a92505050565b5050565b60006200105262000b84565b6001600160a01b031663ce58da33836200107460ca546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160206040518083038186803b158015620010bb57600080fd5b505afa158015620010d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a1919062003046565b60cb546000908190815b8181101562000ff257600060cb828154811062001121576200112162003419565b6000918252602090912001546001600160a01b031690506200114b816110106200074e8262001f08565b620011579085620032e9565b93505080806200116790620033cf565b91505062001100565b60cb81815481106200118157600080fd5b6000918252602090912001546001600160a01b0316905081565b60005b815181101562001042576000828281518110620011bf57620011bf62003419565b6020908102919091018101516001600160a01b0381166000908152606590925260409091205490915060ff16620012155760405163122ab6a960e21b81526001600160a01b038216600482015260240162000932565b620012208162002116565b6001600160a01b038116600081815260656020908152604091829020805460ff1916905590519182527f3562b8c49e34d53119756b2b8b55a910ed22c2cda0d3b07398510d804c2dc621910160405180910390a150806200128181620033cf565b9150506200119e565b3360009081526065602052604090205460609060ff16620012be57604051639d5b229960e01b815260040160405180910390fd5b600080856001600160a01b03168486604051620012dc919062003168565b60006040518083038185875af1925050503d80600081146200131b576040519150601f19603f3d011682016040523d82523d6000602084013e62001320565b606091505b5091509150816200139057620013756200133a8262002120565b6040805180820190915260208082527f52657665727465642062792065787465726e616c20636f6e7472616374202d2090820152906200215d565b60405162461bcd60e51b815260040162000932919062003203565b7fcf452d48646654954090c61dd69f99a99bea4e2264594078fc81bfd43d6f6a9e3386604051620013c3929190620031dd565b60405180910390a195945050505050565b6000620013e062002053565b33600090815260336020526040902054909150821115620014145760405163162908e360e11b815260040160405180910390fd5b42816001600160a01b03166361c533b46040518163ffffffff1660e01b815260040160206040518083038186803b1580156200144f57600080fd5b505afa15801562001464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200148a9190620030fb565b604051636cb7c6f960e01b81523360048201526001600160a01b03841690636cb7c6f99060240160206040518083038186803b158015620014ca57600080fd5b505afa158015620014df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015059190620030fb565b620015119190620032e9565b11156200153157604051631a874cc960e11b815260040160405180910390fd5b60cb5460005b818110156200159d57600060cb828154811062001558576200155862003419565b6000918252602090912001546001600160a01b03169050620015873382620015818189620008d1565b6200218b565b50806200159481620033cf565b91505062001537565b5062000b62338462002239565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b620015df62002068565b620010428282808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506200238d92505050565b80518251146200164e57815181516040516341a0572360e01b81526004810192909252602482015260440162000932565b60005b825181101562000b62576200168283828151811062001674576200167462003419565b6020026020010151620023d6565b600083828151811062001699576200169962003419565b6020026020010151838381518110620016b657620016b662003419565b6020026020010151604051620016cc9062002b85565b620016d9929190620031dd565b604051809103906000f080158015620016f6573d6000803e3d6000fd5b506001600160a01b0381166000908152606560205260409020805460ff1916600117905583519091507f26c79e13dd63e8716f130c25331c09f2fdd55d6880bbfa7bcc38868207e8a67090829085908590811062001758576200175862003419565b602002602001015160405162001770929190620031dd565b60405180910390a1806001600160a01b031663cf26fec66040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620017b457600080fd5b505af1158015620017c9573d6000803e3d6000fd5b50505050508080620017db90620033cf565b91505062001651565b600080620017f162000b84565b9050620017fd62000b84565b60405163ce58da3360e01b81526001600160a01b0387811660048301528681166024830152919091169063ce58da339060440160206040518083038186803b1580156200184957600080fd5b505afa1580156200185e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001884919062003046565b620018b657604051633d487fe560e11b81526001600160a01b0380871660048301528516602482015260440162000932565b604051633806708f60e21b81526001600160a01b0382169063e019c23c9062000d5590889088908890600401620031b9565b600080620018f560355490565b90508062001904575090919050565b6200190e62000f7b565b6200191a828562003327565b620008ca919062003304565b6200193062002068565b6001600160a01b038116620019975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000932565b620019a281620020c4565b50565b620019b261101062000b67565b620019d55760405163ee84f40b60e01b8152611010600482015260240162000932565b6000620019e160355490565b90506000620019f36110103462000c09565b90508162001a4a5762001a07838262002493565b62001a13838262002578565b7f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62836110103460405162000b5993929190620031b9565b60008162001a5762000f7b565b62001a63919062003349565b905062001a89848262001a77868662003327565b62001a83919062003304565b62002493565b62001a95848362002578565b7f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62846110103460405162001acc93929190620031b9565b60405180910390a150505050565b62001ae58262000b67565b62001b0f5760405163ee84f40b60e01b81526001600160a01b038316600482015260240162000932565b600062001b1d838362000c09565b905062001b2f8462001a8383620018e8565b62001b466001600160a01b038416333085620025ec565b62001b52848262002578565b7f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6284848460405162001acc93929190620031b9565b6001600160a01b03831662001beb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840162000932565b6001600160a01b03821662001c4e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840162000932565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600062001cbd8484620015aa565b9050600019811462001d2a578181101562001d1b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640162000932565b62001d2a848484840362001b87565b50505050565b6001600160a01b03831662001d965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840162000932565b6001600160a01b03821662001dfa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840162000932565b6001600160a01b0383166000908152603360205260409020548181101562001e745760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840162000932565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929062001ead908490620032e9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405162001efa91815260200190565b60405180910390a362001d2a565b60006001600160a01b038216611010141562001f25575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b15801562001f6557600080fd5b505afa15801562001f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a19190620030fb565b600054610100900460ff1662001fca5760405162461bcd60e51b8152600401620009329062003218565b62000e8762002648565b600054610100900460ff1662001ffe5760405162461bcd60e51b8152600401620009329062003218565b6200104282826200267d565b60005b815181101562001042576200203e82828151811062002030576200203062003419565b6020026020010151620026d2565b806200204a81620033cf565b9150506200200d565b600062000c046098546001600160a01b031690565b6098546001600160a01b0316331462000e875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000932565b609880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620019a262002068565b60606044825110156200214157505060408051602081019091526000815290565b60048201915081806020019051810190620008a191906200306a565b606082826040516020016200217492919062003186565b604051602081830303815290604052905092915050565b6001600160a01b03821661101014156200222357600080846001600160a01b03168360405160006040518083038185875af1925050503d8060008114620021ef576040519150601f19603f3d011682016040523d82523d6000602084013e620021f4565b606091505b5091509150816200221c5780604051639a367e1760e01b815260040162000932919062003203565b5050505050565b62000b626001600160a01b0383168483620027cf565b6001600160a01b0382166200229b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840162000932565b6001600160a01b03821660009081526033602052604090205481811015620023115760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840162000932565b6001600160a01b03831660009081526033602052604081208383039055603580548492906200234290849062003349565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60005b81518110156200104257620023c1828281518110620023b357620023b362003419565b602002602001015162002801565b80620023cd81620033cf565b91505062002390565b620023e062002068565b620023ea62002053565b604051633b42d9af60e21b81526001600160a01b038381166004830152919091169063ed0b66bc9060240160206040518083038186803b1580156200242e57600080fd5b505afa15801562002443573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002469919062003046565b620019a257604051635ef0ef1560e01b81526001600160a01b038216600482015260240162000932565b6001600160a01b038216620024eb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000932565b8060356000828254620024ff9190620032e9565b90915550506001600160a01b038216600090815260336020526040812080548392906200252e908490620032e9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6200258262002053565b604051631c783fd360e31b81526001600160a01b03848116600483015260248201849052919091169063e3c1fe9890604401600060405180830381600087803b158015620025cf57600080fd5b505af1158015620025e4573d6000803e3d6000fd5b505050505050565b62001d2a846323b872dd60e01b8585856040516024016200261093929190620031b9565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526200298a565b600054610100900460ff16620026725760405162461bcd60e51b8152600401620009329062003218565b62000e8733620020c4565b600054610100900460ff16620026a75760405162461bcd60e51b8152600401620009329062003218565b8151620026bc90603690602085019062002b93565b50805162000b6290603790602084019062002b93565b620026dd8162000b67565b15620027085760405163371d045b60e21b81526001600160a01b038216600482015260240162000932565b620027138162000e64565b6200273d5760405163ee84f40b60e01b81526001600160a01b038216600482015260240162000932565b60cb80546001810182557fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb0180546001600160a01b0319166001600160a01b0384169081179091559054600082815260cc602090815260409182902092909255519182527f808665eda000f8d729f31a384bae411282aa3be62cb73ed74e2225e2eef7125d910160405180910390a150565b6040516001600160a01b03831660248201526044810182905262000b6290849063a9059cbb60e01b9060640162002610565b6200280c8162000b67565b620028365760405163067c787f60e41b81526001600160a01b038216600482015260240162000932565b6001600160a01b038116600090815260cc60205260408120546200285d9060019062003349565b60cb8054919250600091620028759060019062003349565b8154811062002888576200288862003419565b60009182526020909120015460cb80546001600160a01b039092169250829184908110620028ba57620028ba62003419565b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055620028f0826001620032e9565b6001600160a01b03808316600090815260cc60205260408082209390935590851681529081205560cb8054806200292b576200292b62003403565b6000828152602090819020600019908301810180546001600160a01b03191690559091019091556040516001600160a01b03851681527f289634222e6533fbe86ba920f2c134b0c959102a872f93ccc13ca9346a93f2f9910162000b59565b6000620029e1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662002a639092919063ffffffff16565b80519091501562000b62578080602001905181019062002a02919062003046565b62000b625760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000932565b6060620009718484600085856001600160a01b0385163b62002ac85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000932565b600080866001600160a01b0316858760405162002ae6919062003168565b60006040518083038185875af1925050503d806000811462002b25576040519150601f19603f3d011682016040523d82523d6000602084013e62002b2a565b606091505b509150915062002b3c82828662002b47565b979650505050505050565b6060831562002b58575081620008ca565b82511562002b695782518084602001fd5b8160405162461bcd60e51b815260040162000932919062003203565b610721806200345c83390190565b82805462002ba19062003392565b90600052602060002090601f01602090048101928262002bc5576000855562002c10565b82601f1062002be057805160ff191683800117855562002c10565b8280016001018555821562002c10579182015b8281111562002c1057825182559160200191906001019062002bf3565b5062000e609291505b8082111562000e60576000815560010162002c19565b600082601f83011262002c4157600080fd5b8135602062002c5a62002c548362003297565b62003263565b80838252828201915082860187848660051b890101111562002c7b57600080fd5b60005b8581101562002ca757813562002c948162003445565b8452928401929084019060010162002c7e565b5090979650505050505050565b600082601f83011262002cc657600080fd5b813562002cd762002c5482620032be565b81815284602083860101111562002ced57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121562002d1d57600080fd5b8135620008ca8162003445565b60006020828403121562002d3d57600080fd5b8151620008ca8162003445565b6000806040838503121562002d5e57600080fd5b823562002d6b8162003445565b9150602083013562002d7d8162003445565b809150509250929050565b60008060006060848603121562002d9e57600080fd5b833562002dab8162003445565b9250602084013562002dbd8162003445565b929592945050506040919091013590565b60008060006060848603121562002de457600080fd5b833562002df18162003445565b9250602084013567ffffffffffffffff81111562002e0e57600080fd5b62002e1c8682870162002cb4565b925050604084013590509250925092565b6000806040838503121562002e4157600080fd5b823562002e4e8162003445565b946020939093013593505050565b6000806020838503121562002e7057600080fd5b823567ffffffffffffffff8082111562002e8957600080fd5b818501915085601f83011262002e9e57600080fd5b81358181111562002eae57600080fd5b8660208260051b850101111562002ec457600080fd5b60209290920196919550909350505050565b60006020828403121562002ee957600080fd5b813567ffffffffffffffff81111562002f0157600080fd5b620009718482850162002c2f565b6000806040838503121562002f2357600080fd5b823567ffffffffffffffff81111562002f3b57600080fd5b62002f498582860162002c2f565b925050602083013562002d7d8162003445565b6000806040838503121562002f7057600080fd5b823567ffffffffffffffff8082111562002f8957600080fd5b62002f978683870162002c2f565b935060209150818501358181111562002faf57600080fd5b8501601f8101871362002fc157600080fd5b803562002fd262002c548262003297565b8082825285820191508584018a878560051b870101111562002ff357600080fd5b6000805b8581101562003033578235888111156200300f578283fd5b6200301f8e8b838b010162002cb4565b865250938801939188019160010162002ff7565b5050508096505050505050509250929050565b6000602082840312156200305957600080fd5b81518015158114620008ca57600080fd5b6000602082840312156200307d57600080fd5b815167ffffffffffffffff8111156200309557600080fd5b8201601f81018413620030a757600080fd5b8051620030b862002c5482620032be565b818152856020838501011115620030ce57600080fd5b62000da982602083016020860162003363565b600060208284031215620030f457600080fd5b5035919050565b6000602082840312156200310e57600080fd5b5051919050565b6000602082840312156200312857600080fd5b815160ff81168114620008ca57600080fd5b600081518084526200315481602086016020860162003363565b601f01601f19169290920160200192915050565b600082516200317c81846020870162003363565b9190910192915050565b600083516200319a81846020880162003363565b835190830190620031b081836020880162003363565b01949350505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038316815260406020820181905260009062000971908301846200313a565b602081526000620008ca60208301846200313a565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff811182821017156200328f576200328f6200342f565b604052919050565b600067ffffffffffffffff821115620032b457620032b46200342f565b5060051b60200190565b600067ffffffffffffffff821115620032db57620032db6200342f565b50601f01601f191660200190565b60008219821115620032ff57620032ff620033ed565b500190565b6000826200332257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615620033445762003344620033ed565b500290565b6000828210156200335e576200335e620033ed565b500390565b60005b838110156200338057818101518382015260200162003366565b8381111562001d2a5750506000910152565b600181811c90821680620033a757607f821691505b60208210811415620033c957634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415620033e657620033e6620033ed565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620019a257600080fdfe6080604052604051610721380380610721833981016040819052610022916102d2565b61002e82826000610035565b5050610431565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d083836040518060600160405280602781526020016106fa602791396101a9565b9392505050565b6100ea8161028760201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61029660201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102115760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610148565b600080856001600160a01b03168560405161022c91906103a0565b600060405180830381855af49150503d8060008114610267576040519150601f19603f3d011682016040523d82523d6000602084013e61026c565b606091505b50909250905061027d828286610299565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a85750816100d0565b8251156102b85782518084602001fd5b8160405162461bcd60e51b815260040161014891906103bc565b600080604083850312156102e557600080fd5b82516001600160a01b03811681146102fc57600080fd5b60208401519092506001600160401b038082111561031957600080fd5b818501915085601f83011261032d57600080fd5b81518181111561033f5761033f61041b565b604051601f8201601f19908116603f011681019083821181831017156103675761036761041b565b8160405282815288602084870101111561038057600080fd5b6103918360208301602088016103ef565b80955050505050509250929050565b600082516103b28184602087016103ef565b9190910192915050565b60208152600082518060208401526103db8160408501602087016103ef565b601f01601f19169190910160400192915050565b60005b8381101561040a5781810151838201526020016103f2565b838111156100645750506000910152565b634e487b7160e01b600052604160045260246000fd5b6102ba806104406000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025e602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b60606001600160a01b0384163b6101305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161014b91906101de565b600060405180830381855af49150503d8060008114610186576040519150601f19603f3d011682016040523d82523d6000602084013e61018b565b606091505b509150915061019b8282866101a5565b9695505050505050565b606083156101b457508161004e565b8251156101c45782518084602001fd5b8160405162461bcd60e51b815260040161012791906101fa565b600082516101f081846020870161022d565b9190910192915050565b602081526000825180602084015261021981604085016020870161022d565b601f01601f19169190910160400192915050565b60005b83811015610248578181015183820152602001610230565b83811115610257576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220fb537d1df0a2f3ea0050d30fb82ca020f06a83116d3853b9eda518a67b0c9be764736f6c63430008070033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207cb932f633484d0dd5191704bf62f1a15e840ecaf21955fd17494b22bae3fc1c64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "assetBaseCurrencyPrice(address,uint256)": {
        "notice": "This function is imported by other contract, thus cannot be external"
      },
      "canResolvePrice(address)": {
        "notice": "This function is imported by other contract, thus cannot be external"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 669,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 672,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2128,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 832,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "_balances",
        "offset": 0,
        "slot": "51",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 838,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "_allowances",
        "offset": 0,
        "slot": "52",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 840,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "53",
        "type": "t_uint256"
      },
      {
        "astId": 842,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "_name",
        "offset": 0,
        "slot": "54",
        "type": "t_string_storage"
      },
      {
        "astId": 844,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "_symbol",
        "offset": 0,
        "slot": "55",
        "type": "t_string_storage"
      },
      {
        "astId": 1423,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "__gap",
        "offset": 0,
        "slot": "56",
        "type": "t_array(t_uint256)45_storage"
      },
      {
        "astId": 4732,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "_budgetApprovals",
        "offset": 0,
        "slot": "101",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4997,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 541,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "_owner",
        "offset": 0,
        "slot": "152",
        "type": "t_address"
      },
      {
        "astId": 661,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "__gap",
        "offset": 0,
        "slot": "153",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3049,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "_baseCurrency",
        "offset": 0,
        "slot": "202",
        "type": "t_address"
      },
      {
        "astId": 3052,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "assets",
        "offset": 0,
        "slot": "203",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 3056,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "_assetIndex",
        "offset": 0,
        "slot": "204",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3923,
        "contract": "contracts/LiquidPool.sol:LiquidPool",
        "label": "__gap",
        "offset": 0,
        "slot": "205",
        "type": "t_array(t_uint256)50_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)45_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[45]",
        "numberOfBytes": "1440"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}