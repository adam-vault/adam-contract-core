{
  "address": "0xB1b85C89A56FA93e9cbf367523099F6ec739de61",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "count1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count2",
          "type": "uint256"
        }
      ],
      "name": "InputLengthNotMatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceGateway",
          "type": "address"
        }
      ],
      "name": "OwnerNotPermit",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "base",
          "type": "address"
        }
      ],
      "name": "PairNotSupport",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceGateway",
          "type": "address"
        }
      ],
      "name": "PriceGatewayExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceGateway",
          "type": "address"
        }
      ],
      "name": "PriceGatewayOmit",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "priceGateway",
          "type": "address"
        }
      ],
      "name": "AddPriceGateway",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceGateway",
          "type": "address"
        }
      ],
      "name": "addPriceGateway",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "assetPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultPriceGateway",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_priceGateways",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "base",
          "type": "address"
        }
      ],
      "name": "isSupportedPair",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "priceGateways",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_assets",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_bases",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "priceGateway",
          "type": "address"
        }
      ],
      "name": "setTokenPairPriceGatewayMap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPairPriceGatewayMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x39f7c2733f8ec410e2e2ae225af0e206f0154744d5e02f71cdea3789850ece6a",
  "receipt": {
    "to": null,
    "from": "0xc5A00702Bb8ddB2214b87F04813dF658F07f81D9",
    "contractAddress": "0xB1b85C89A56FA93e9cbf367523099F6ec739de61",
    "transactionIndex": 54,
    "gasUsed": "898672",
    "logsBloom": "0x
    "blockHash": "0x760f7c66d11449994fe001432b6705fc1375c3595e1543907c75dfe806c96e13",
    "transactionHash": "0x39f7c2733f8ec410e2e2ae225af0e206f0154744d5e02f71cdea3789850ece6a",
    "logs": [
      {
        "transactionIndex": 54,
        "blockNumber": 43049704,
        "transactionHash": "0x39f7c2733f8ec410e2e2ae225af0e206f0154744d5e02f71cdea3789850ece6a",
        "address": "0xB1b85C89A56FA93e9cbf367523099F6ec739de61",
        "topics": [
          "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000ff",
        "logIndex": 295,
        "blockHash": "0x760f7c66d11449994fe001432b6705fc1375c3595e1543907c75dfe806c96e13"
      },
      {
        "transactionIndex": 54,
        "blockNumber": 43049704,
        "transactionHash": "0x39f7c2733f8ec410e2e2ae225af0e206f0154744d5e02f71cdea3789850ece6a",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c5a00702bb8ddb2214b87f04813df658f07f81d9",
          "0x000000000000000000000000bdbd4347b082d9d6bdf2da4555a37ce52a2e2120"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000060d922e07454000000000000000000000000000000000000000000000000036fa650d473a1ea88000000000000000000000000000000000000000000001684691bfaba1b5caa350000000000000000000000000000000000000000000000036f4577b1932d9688000000000000000000000000000000000000000000001684697cd3dcfbd0fe35",
        "logIndex": 296,
        "blockHash": "0x760f7c66d11449994fe001432b6705fc1375c3595e1543907c75dfe806c96e13"
      }
    ],
    "blockNumber": 43049704,
    "cumulativeGasUsed": "12283444",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "620a3fefea25e6b6df861fc5d6b8881e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count2\",\"type\":\"uint256\"}],\"name\":\"InputLengthNotMatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceGateway\",\"type\":\"address\"}],\"name\":\"OwnerNotPermit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"}],\"name\":\"PairNotSupport\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceGateway\",\"type\":\"address\"}],\"name\":\"PriceGatewayExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceGateway\",\"type\":\"address\"}],\"name\":\"PriceGatewayOmit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"priceGateway\",\"type\":\"address\"}],\"name\":\"AddPriceGateway\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceGateway\",\"type\":\"address\"}],\"name\":\"addPriceGateway\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"assetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultPriceGateway\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_priceGateways\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"}],\"name\":\"isSupportedPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"priceGateways\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_bases\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"priceGateway\",\"type\":\"address\"}],\"name\":\"setTokenPairPriceGatewayMap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenPairPriceGatewayMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract is interacted with priceResolver.solCustom price gateway is allowed, but need to implement priceGateway.sol and set by governAccountingSystem implemented price gateway since it will handle set price by govern\",\"kind\":\"dev\",\"methods\":{\"addPriceGateway(address)\":{\"details\":\"This function must be called by govern, will logic occur in internal function\",\"params\":{\"priceGateway\":\"price Gateway address that want to whitelist\"}},\"assetPrice(address,address,uint256)\":{\"details\":\"accept ETH / USD as Asset / Base Token\",\"params\":{\"amount\":\"Asset Amount in term of Asset decimal\",\"asset\":\"Asset token address\",\"base\":\"Base token address\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"isSupportedPair(address,address)\":{\"details\":\"This function not really check in gateway,since the checking will be done when setting tokenPairPriceGatewayMap\",\"params\":{\"asset\":\"Asset token address\",\"base\":\"Base token address\"},\"returns\":{\"_0\":\"Bool Result of the checking\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTokenPairPriceGatewayMap(address[],address[],address)\":{\"details\":\"This function must be called by govern, will logic occur in internal function\",\"params\":{\"_assets\":\"Asset List that supported by price gateway\",\"_bases\":\"Base token List that supported by price gateway\",\"priceGateway\":\"Price gateway address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Dao Account System\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPriceGateway(address)\":{\"notice\":\"Add the price gateway to whitelist\"},\"assetPrice(address,address,uint256)\":{\"notice\":\"Provide Asset Price\"},\"isSupportedPair(address,address)\":{\"notice\":\"Check the token pair is support or not\"},\"setTokenPairPriceGatewayMap(address[],address[],address)\":{\"notice\":\"Set the price gateway which will handle the pairs of price\"}},\"notice\":\"This contract helps managing price gateway and allow set price by govern\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AccountingSystem.sol\":\"AccountingSystem\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/AccountingSystem.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.7;\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\nimport \\\"./base/PriceGateway.sol\\\";\\nimport \\\"./lib/Concat.sol\\\";\\nimport \\\"./interface/IPriceGateway.sol\\\";\\nimport \\\"./interface/IDao.sol\\\";\\n\\n/// @title Dao Account System\\n/// @notice This contract helps managing price gateway and allow set price by govern\\n/// @dev The contract is interacted with priceResolver.sol\\n/// @dev Custom price gateway is allowed, but need to implement priceGateway.sol and set by govern\\n/// @dev AccountingSystem implemented price gateway since it will handle set price by govern\\n\\ncontract AccountingSystem is Initializable, OwnableUpgradeable {\\n    using Concat for string;\\n    address public defaultPriceGateway;\\n\\n    mapping(address => bool) public priceGateways;\\n    mapping(address => mapping(address => address))\\n        public tokenPairPriceGatewayMap;\\n\\n    event AddPriceGateway(address priceGateway);\\n    error PriceGatewayExist(address priceGateway);\\n    error PriceGatewayOmit(address priceGateway);\\n    error InputLengthNotMatch(uint count1, uint count2);\\n    error PairNotSupport(address asset, address base);\\n    error OwnerNotPermit(address priceGateway);\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        address[] memory _priceGateways\\n    )\\n        public\\n        initializer\\n    {   \\n        __Ownable_init();\\n\\n        for (uint256 i = 0; i < _priceGateways.length; i++) {\\n            if(i == 0) {\\n                defaultPriceGateway = _priceGateways[i];\\n            }\\n            addPriceGateway(_priceGateways[i]);\\n\\n        }\\n    }\\n\\n    /// @notice Add the price gateway to whitelist\\n    /// @dev This function must be called by govern, will logic occur in internal function\\n    /// @param priceGateway price Gateway address that want to whitelist\\n    function addPriceGateway(address priceGateway)\\n        public\\n        onlyOwner\\n    {\\n        _addPriceGateway(priceGateway);\\n    }\\n    /// @notice Internal function add the price gateway to whitelist\\n    /// @dev Same price gateway cannot add to whitelist twice\\n    /// @param priceGateway price Gateway address that want to whitelist\\n    function _addPriceGateway(address priceGateway) internal {\\n        if (!IDao(payable(owner())).canAddPriceGateway(priceGateway)) {\\n            revert OwnerNotPermit(priceGateway);\\n        }\\n        if(priceGateways[priceGateway]){\\n            revert PriceGatewayExist(priceGateway);\\n        }\\n        priceGateways[priceGateway] = true;\\n\\n        emit AddPriceGateway(priceGateway);\\n    }\\n\\n    /// @notice Set the price gateway which will handle the pairs of price\\n    /// @dev This function must be called by govern, will logic occur in internal function\\n    /// @param _assets Asset List that supported by price gateway\\n    /// @param _bases Base token List that supported by price gateway\\n    /// @param priceGateway Price gateway address\\n    function setTokenPairPriceGatewayMap(\\n        address[] calldata _assets,\\n        address[] calldata _bases,\\n        address priceGateway\\n    ) public onlyOwner {\\n        _setTokenPairPriceGatewayMap(_assets, _bases, priceGateway);\\n    }\\n\\n    /// @notice Internal function that set which price gateway will handle which pair of price\\n    /// @dev The Price gateway need to support all combination of asset x base\\n    /// @param _assets Asset address List that supported by price gateway\\n    /// @param _bases Base token address List that supported by price gateway\\n    /// @param priceGateway Price gateway address\\n    function _setTokenPairPriceGatewayMap(\\n        address[] calldata _assets,\\n        address[] calldata _bases,\\n        address priceGateway\\n    ) internal {\\n        if (!priceGateways[priceGateway]) {\\n            revert PriceGatewayOmit(priceGateway);\\n        }\\n        if (_assets.length != _bases.length) {\\n            revert InputLengthNotMatch(_assets.length, _bases.length);\\n        }\\n        for (uint256 i = 0; i < _assets.length; i++) {\\n            if (!IPriceGateway(priceGateway).isSupportedPair(_assets[i], _bases[i])) {\\n                revert PairNotSupport(_assets[i], _bases[i]);\\n            }\\n            tokenPairPriceGatewayMap[_assets[i]][_bases[i]] = priceGateway;\\n        }\\n    }\\n\\n    /// @notice Provide Asset Price\\n    /// @dev accept ETH / USD as Asset / Base Token\\n    /// @param asset Asset token address\\n    /// @param base Base token address\\n    /// @param amount Asset Amount in term of Asset decimal\\n    function assetPrice(\\n        address asset,\\n        address base,\\n        uint256 amount\\n    ) public view returns (uint256) {\\n        if (asset == base && asset != address(0)) return amount;\\n\\n        if(!isSupportedPair(asset, base)){\\n            revert PairNotSupport(asset, base);\\n        }\\n\\n        address _priceGateway = (tokenPairPriceGatewayMap[asset][base] != address(0)) ? tokenPairPriceGatewayMap[asset][base] : defaultPriceGateway;\\n        return IPriceGateway(_priceGateway).assetPrice(asset, base, amount);\\n    }\\n\\n    /// @notice Check the token pair is support or not\\n    /// @dev This function not really check in gateway,\\n    /// @dev since the checking will be done when setting tokenPairPriceGatewayMap\\n    /// @param asset Asset token address\\n    /// @param base Base token address\\n    /// @return Bool Result of the checking\\n    function isSupportedPair(address asset, address base)\\n        public\\n        view\\n        returns (bool)\\n    {        \\n\\n        if (asset == base && asset != address(0)) return true;\\n        return \\n            tokenPairPriceGatewayMap[asset][base] != address(0) ||\\n            IPriceGateway(defaultPriceGateway).isSupportedPair(asset, base);\\n    }\\n\\n    uint256[50] private __gap;\\n}\",\"keccak256\":\"0x3b8328ee40ef38722f54257936f843c11537b358fc23cba3ab3040e2133f135b\",\"license\":\"GPL-3.0\"},\"contracts/base/PriceGateway.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.7;\\n\\nabstract contract PriceGateway {\\n    function isSupportedPair(address asset, address base)\\n        public\\n        view\\n        virtual\\n        returns (bool)\\n    {}\\n\\n    function assetPrice(\\n        address asset,\\n        address base,\\n        uint256 amount\\n    ) public view virtual returns (uint256) {}\\n\\n    function name() external virtual returns (string memory);\\n}\",\"keccak256\":\"0x3bc67e27d76e4ca7cef44c22bc05fd9b6579bffe8dd365496f1dba49931028b1\",\"license\":\"GPL-3.0\"},\"contracts/interface/IDao.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.5.3. SEE SOURCE BELOW. !!\\npragma solidity 0.8.7;\\n\\ninterface IDao {\\n    error BudgetApprovalTemplateNotWhitelisted(address template);\\n    error ContractCallFail(bytes result);\\n    error GovernAlreadyExists(string gName);\\n    error InputLengthNotMatch(uint256 count1, uint256 count2);\\n    error InsufficientDeposit();\\n    error InvalidAddress(address addr);\\n    error InvalidContract(address _contract);\\n    error PluginAlreadyExists(bytes32 contractName);\\n    error PluginNotAllowed(bytes32 contractName);\\n    error PluginRequired(bytes32 contractName);\\n    error Unauthorized();\\n    error UnsupportedDowngrade();\\n    event AddAdmissionToken(\\n        address token,\\n        uint256 minTokenToAdmit,\\n        uint256 tokenId,\\n        bool isMemberToken\\n    );\\n    event AllowDepositToken(address token);\\n    event CreateBudgetApproval(address budgetApproval, bytes data);\\n    event CreateGovern(string name, address govern, address voteToken);\\n    event CreateMember(address account, uint256 depositAmount);\\n    event CreateMemberToken(address token);\\n    event CreatePlugin(bytes32 contractName, address plugin);\\n    event Deposit(address account, uint256 amount);\\n    event ExecuteByBudgetApproval(address budgetApproval, bytes data);\\n    event Initialized(uint8 version);\\n    event RemoveAdmissionToken(address token);\\n    event RevokeBudgetApproval(address budgetApproval);\\n    event SetFirstDepositTime(address owner, uint256 time);\\n    event UpdateDescription(string description);\\n    event UpdateLocktime(uint256 locktime);\\n    event UpdateLogoCID(string logoCID);\\n    event UpdateMinDepositAmount(uint256 amount);\\n    event UpdateName(string newName);\\n    event UpgradeDaoBeacon(address daoBeacon);\\n    event WhitelistTeam(uint256 tokenId);\\n\\n    function accountingSystem() external view returns (address);\\n\\n    function adam() external view returns (address);\\n\\n    function addAssets(address[] memory erc20s) external;\\n\\n    function afterDeposit(address account, uint256 amount) external;\\n\\n    function baseCurrency() external view returns (address);\\n\\n    function budgetApprovals(address template) external view returns (bool);\\n\\n    function byPassGovern(address account) external view returns (bool);\\n\\n    function canAddPriceGateway(address priceGateway)\\n        external\\n        view\\n        returns (bool);\\n\\n    function canCreateBudgetApproval(address budgetApproval)\\n        external\\n        view\\n        returns (bool);\\n\\n    function createBudgetApprovals(\\n        address[] memory __budgetApprovals,\\n        bytes[] memory data\\n    ) external;\\n\\n    function createGovern(\\n        string memory _name,\\n        uint256 quorum,\\n        uint256 passThreshold,\\n        uint8 voteType,\\n        address externalVoteToken,\\n        uint256 durationInBlock\\n    ) external;\\n\\n    function createPlugin(bytes32 contractName, bytes memory data)\\n        external\\n        returns (address);\\n\\n    function creator() external view returns (address);\\n\\n    function description() external view returns (string memory);\\n\\n    function executeByBudgetApproval(\\n        address _to,\\n        bytes memory _data,\\n        uint256 _value\\n    ) external returns (bytes memory);\\n\\n    function executePlugin(\\n        bytes32 contractName,\\n        bytes memory data,\\n        uint256 value\\n    ) external returns (bytes memory);\\n\\n    function firstDepositTime(address) external view returns (uint256);\\n\\n    function govern(string memory) external view returns (address);\\n\\n    function initialize(\\n        address _creator,\\n        string memory _name,\\n        string memory _description,\\n        address _baseCurrency,\\n        bytes[] memory _data\\n    ) external;\\n\\n    function isAssetSupported(address) external view returns (bool);\\n\\n    function isPlugin(address) external view returns (bool);\\n\\n    function liquidPool() external view returns (address);\\n\\n    function locktime() external view returns (uint256);\\n\\n    function logoCID() external view returns (string memory);\\n\\n    function memberToken() external view returns (address);\\n\\n    function membership() external view returns (address);\\n\\n    function minDepositAmount() external view returns (uint256);\\n\\n    function multicall(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory data\\n    ) external returns (bytes[] memory);\\n\\n    function name() external view returns (string memory);\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] memory,\\n        uint256[] memory,\\n        bytes memory\\n    ) external returns (bytes4);\\n\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes memory\\n    ) external returns (bytes4);\\n\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) external returns (bytes4);\\n\\n    function plugins(bytes32) external view returns (address);\\n\\n    function revokeBudgetApprovals(address[] memory __budgetApprovals) external;\\n\\n    function setDescription(string memory _description) external;\\n\\n    function setFirstDepositTime(address owner, uint256 timestamp) external;\\n\\n    function setLocktime(uint256 _locktime) external;\\n\\n    function setLogoCID(string memory _logoCID) external;\\n\\n    function setMinDepositAmount(uint256 _minDepositAmount) external;\\n\\n    function setName(string memory _name) external;\\n\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n\\n    function team() external view returns (address);\\n\\n    function upgradeTo(address _daoBeacon) external;\\n\\n    receive() external payable;\\n}\\n\\n// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:\\n/*\\n[{\\\"inputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"template\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"BudgetApprovalTemplateNotWhitelisted\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"result\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"ContractCallFail\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"gName\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"GovernAlreadyExists\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"count1\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"count2\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"InputLengthNotMatch\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"InsufficientDeposit\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"addr\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"InvalidAddress\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_contract\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"InvalidContract\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"PluginAlreadyExists\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"PluginNotAllowed\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"PluginRequired\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"Unauthorized\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"UnsupportedDowngrade\\\",\\\"type\\\":\\\"error\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"token\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"minTokenToAdmit\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"tokenId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"isMemberToken\\\",\\\"type\\\":\\\"bool\\\"}],\\\"name\\\":\\\"AddAdmissionToken\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"token\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"AllowDepositToken\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"budgetApproval\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"CreateBudgetApproval\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"govern\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"voteToken\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"CreateGovern\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"depositAmount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"CreateMember\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"token\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"CreateMemberToken\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"plugin\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"CreatePlugin\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"Deposit\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"budgetApproval\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"ExecuteByBudgetApproval\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint8\\\",\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"uint8\\\"}],\\\"name\\\":\\\"Initialized\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"token\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"RemoveAdmissionToken\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"budgetApproval\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"RevokeBudgetApproval\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"owner\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"time\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"SetFirstDepositTime\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"description\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"UpdateDescription\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"locktime\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"UpdateLocktime\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"logoCID\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"UpdateLogoCID\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"UpdateMinDepositAmount\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"newName\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"UpdateName\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"daoBeacon\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"UpgradeDaoBeacon\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"tokenId\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"WhitelistTeam\\\",\\\"type\\\":\\\"event\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"accountingSystem\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"adam\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"erc20s\\\",\\\"type\\\":\\\"address[]\\\"}],\\\"name\\\":\\\"addAssets\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"afterDeposit\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"baseCurrency\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"template\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"budgetApprovals\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"byPassGovern\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"priceGateway\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"canAddPriceGateway\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"budgetApproval\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"canCreateBudgetApproval\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"__budgetApprovals\\\",\\\"type\\\":\\\"address[]\\\"},{\\\"internalType\\\":\\\"bytes[]\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes[]\\\"}],\\\"name\\\":\\\"createBudgetApprovals\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_name\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"quorum\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"passThreshold\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"enum Dao.VoteType\\\",\\\"name\\\":\\\"voteType\\\",\\\"type\\\":\\\"uint8\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"externalVoteToken\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"durationInBlock\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"createGovern\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"createPlugin\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"creator\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"description\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"string\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_to\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"_data\\\",\\\"type\\\":\\\"bytes\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_value\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"executeByBudgetApproval\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"contractName\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"executePlugin\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"firstDepositTime\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"govern\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_creator\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_name\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_description\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_baseCurrency\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"bytes[]\\\",\\\"name\\\":\\\"_data\\\",\\\"type\\\":\\\"bytes[]\\\"}],\\\"name\\\":\\\"initialize\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"isAssetSupported\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"isPlugin\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"liquidPool\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"locktime\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"logoCID\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"string\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"memberToken\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"membership\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"minDepositAmount\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"targets\\\",\\\"type\\\":\\\"address[]\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"values\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"internalType\\\":\\\"bytes[]\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes[]\\\"}],\\\"name\\\":\\\"multicall\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes[]\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"name\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"string\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"onERC1155BatchReceived\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes4\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes4\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"onERC1155Received\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes4\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes4\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"onERC721Received\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes4\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes4\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"plugins\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"__budgetApprovals\\\",\\\"type\\\":\\\"address[]\\\"}],\\\"name\\\":\\\"revokeBudgetApprovals\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_description\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"setDescription\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"owner\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"timestamp\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"setFirstDepositTime\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_locktime\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"setLocktime\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_logoCID\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"setLogoCID\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_minDepositAmount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"setMinDepositAmount\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_name\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"setName\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes4\\\",\\\"name\\\":\\\"interfaceId\\\",\\\"type\\\":\\\"bytes4\\\"}],\\\"name\\\":\\\"supportsInterface\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"team\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_daoBeacon\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"upgradeTo\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"stateMutability\\\":\\\"payable\\\",\\\"type\\\":\\\"receive\\\"}]\\n*/\\n\",\"keccak256\":\"0xbdfc24ea8ea156e1ebcb3545037e5765f04ef8f54e3c1cea7bcdd77a7b9f621b\",\"license\":\"GPL-3.0\"},\"contracts/interface/IPriceGateway.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.7;\\n\\ninterface IPriceGateway {\\n    function isSupportedPair(address asset, address base)\\n        external\\n        view\\n        returns (bool);\\n\\n    function assetPrice(\\n        address asset,\\n        address base,\\n        uint256 amount\\n    ) external view returns (uint256);\\n}\",\"keccak256\":\"0x42bd674b13d09d657222f588e02d14246fa9dc66afc7d581deae06a4d6ea341d\",\"license\":\"GPL-3.0\"},\"contracts/lib/Concat.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.7;\\n\\nlibrary Concat {\\n    function concat(string memory a, string memory b) internal pure returns(string memory) {\\n        return string(abi.encodePacked(a, b));\\n    }\\n}\\n\",\"keccak256\":\"0x013aedf863782ff429fb053610335e62c45e5b63bcbb48a5427e1630e1eb7d7b\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a224cee711610071578063a224cee71461013b578063c949d3e61461014e578063cbec417714610182578063ce58da3314610195578063e019c23c146101a8578063f2fde38b146101c957600080fd5b806344e9506d146100ae578063599efac5146100c3578063715018a6146100d65780638da5cb5b146100de5780639113376414610108575b600080fd5b6100c16100bc366004610c72565b6101dc565b005b6100c16100d1366004610be8565b6101f8565b6100c161020c565b6033546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61012b610116366004610be8565b60666020526000908152604090205460ff1681565b60405190151581526020016100ff565b6100c1610149366004610cf3565b610220565b6100eb61015c366004610c03565b60676020908152600092835260408084209091529082529020546001600160a01b031681565b6065546100eb906001600160a01b031681565b61012b6101a3366004610c03565b6103be565b6101bb6101b6366004610c36565b6104b4565b6040519081526020016100ff565b6100c16101d7366004610be8565b610624565b6101e461069a565b6101f185858585856106f4565b5050505050565b61020061069a565b61020981610986565b50565b61021461069a565b61021e6000610ad4565b565b600054610100900460ff16158080156102405750600054600160ff909116105b8061025a5750303b15801561025a575060005460ff166001145b6102c25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156102e5576000805461ff0019166101001790555b6102ed610b26565b60005b8251811015610373578061033f5782818151811061031057610310610e6e565b6020026020010151606560006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b61036183828151811061035457610354610e6e565b60200260200101516101f8565b8061036b81610e45565b9150506102f0565b5080156103ba576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6000816001600160a01b0316836001600160a01b03161480156103e957506001600160a01b03831615155b156103f6575060016104ae565b6001600160a01b0383811660009081526067602090815260408083208685168452909152902054161515806104ab575060655460405163ce58da3360e01b81526001600160a01b03858116600483015284811660248301529091169063ce58da339060440160206040518083038186803b15801561047357600080fd5b505afa158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab9190610dbf565b90505b92915050565b6000826001600160a01b0316846001600160a01b03161480156104df57506001600160a01b03841615155b156104eb57508061061d565b6104f584846103be565b61052557604051633d487fe560e11b81526001600160a01b038086166004830152841660248201526044016102b9565b6001600160a01b0384811660009081526067602090815260408083208785168452909152812054909116610564576065546001600160a01b031661058d565b6001600160a01b0380861660009081526067602090815260408083208885168452909152902054165b604051633806708f60e21b81526001600160a01b0387811660048301528681166024830152604482018690529192509082169063e019c23c9060640160206040518083038186803b1580156105e157600080fd5b505afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106199190610de1565b9150505b9392505050565b61062c61069a565b6001600160a01b0381166106915760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b9565b61020981610ad4565b6033546001600160a01b0316331461021e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b9565b6001600160a01b03811660009081526066602052604090205460ff1661073857604051637bf95b7b60e11b81526001600160a01b03821660048201526024016102b9565b838214610762576040516341a0572360e01b815260048101859052602481018390526044016102b9565b60005b8481101561097e57816001600160a01b031663ce58da3387878481811061078e5761078e610e6e565b90506020020160208101906107a39190610be8565b8686858181106107b5576107b5610e6e565b90506020020160208101906107ca9190610be8565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160206040518083038186803b15801561081057600080fd5b505afa158015610824573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108489190610dbf565b6108c65785858281811061085e5761085e610e6e565b90506020020160208101906108739190610be8565b84848381811061088557610885610e6e565b905060200201602081019061089a9190610be8565b604051633d487fe560e11b81526001600160a01b039283166004820152911660248201526044016102b9565b81606760008888858181106108dd576108dd610e6e565b90506020020160208101906108f29190610be8565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086868581811061092657610926610e6e565b905060200201602081019061093b9190610be8565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b031916929091169190911790558061097681610e45565b915050610765565b505050505050565b6033546001600160a01b0316604051631dafcd9f60e11b81526001600160a01b0383811660048301529190911690633b5f9b3e9060240160206040518083038186803b1580156109d557600080fd5b505afa1580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190610dbf565b610a3557604051630ba1dc7b60e41b81526001600160a01b03821660048201526024016102b9565b6001600160a01b03811660009081526066602052604090205460ff1615610a7a576040516309241c2360e11b81526001600160a01b03821660048201526024016102b9565b6001600160a01b038116600081815260666020908152604091829020805460ff1916600117905590519182527f81626d1aa3487c965b76754ec1ae5c89b1e06ed8a7de45aa92bd8150af6bb8f0910160405180910390a150565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610b4d5760405162461bcd60e51b81526004016102b990610dfa565b61021e600054610100900460ff16610b775760405162461bcd60e51b81526004016102b990610dfa565b61021e33610ad4565b80356001600160a01b0381168114610b9757600080fd5b919050565b60008083601f840112610bae57600080fd5b50813567ffffffffffffffff811115610bc657600080fd5b6020830191508360208260051b8501011115610be157600080fd5b9250929050565b600060208284031215610bfa57600080fd5b6104ab82610b80565b60008060408385031215610c1657600080fd5b610c1f83610b80565b9150610c2d60208401610b80565b90509250929050565b600080600060608486031215610c4b57600080fd5b610c5484610b80565b9250610c6260208501610b80565b9150604084013590509250925092565b600080600080600060608688031215610c8a57600080fd5b853567ffffffffffffffff80821115610ca257600080fd5b610cae89838a01610b9c565b90975095506020880135915080821115610cc757600080fd5b50610cd488828901610b9c565b9094509250610ce7905060408701610b80565b90509295509295909350565b60006020808385031215610d0657600080fd5b823567ffffffffffffffff80821115610d1e57600080fd5b818501915085601f830112610d3257600080fd5b813581811115610d4457610d44610e84565b8060051b604051601f19603f83011681018181108582111715610d6957610d69610e84565b604052828152858101935084860182860187018a1015610d8857600080fd5b600095505b83861015610db257610d9e81610b80565b855260019590950194938601938601610d8d565b5098975050505050505050565b600060208284031215610dd157600080fd5b8151801515811461061d57600080fd5b600060208284031215610df357600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000600019821415610e6757634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212208e46e02687d9e277ac5d1c5b8fd0c56ffe2c4617e2bf4c2df23a22f152f34b6964736f6c63430008070033",
  "devdoc": {
    "details": "The contract is interacted with priceResolver.solCustom price gateway is allowed, but need to implement priceGateway.sol and set by governAccountingSystem implemented price gateway since it will handle set price by govern",
    "kind": "dev",
    "methods": {
      "addPriceGateway(address)": {
        "details": "This function must be called by govern, will logic occur in internal function",
        "params": {
          "priceGateway": "price Gateway address that want to whitelist"
        }
      },
      "assetPrice(address,address,uint256)": {
        "details": "accept ETH / USD as Asset / Base Token",
        "params": {
          "amount": "Asset Amount in term of Asset decimal",
          "asset": "Asset token address",
          "base": "Base token address"
        }
      },
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "isSupportedPair(address,address)": {
        "details": "This function not really check in gateway,since the checking will be done when setting tokenPairPriceGatewayMap",
        "params": {
          "asset": "Asset token address",
          "base": "Base token address"
        },
        "returns": {
          "_0": "Bool Result of the checking"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setTokenPairPriceGatewayMap(address[],address[],address)": {
        "details": "This function must be called by govern, will logic occur in internal function",
        "params": {
          "_assets": "Asset List that supported by price gateway",
          "_bases": "Base token List that supported by price gateway",
          "priceGateway": "Price gateway address"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Dao Account System",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addPriceGateway(address)": {
        "notice": "Add the price gateway to whitelist"
      },
      "assetPrice(address,address,uint256)": {
        "notice": "Provide Asset Price"
      },
      "isSupportedPair(address,address)": {
        "notice": "Check the token pair is support or not"
      },
      "setTokenPairPriceGatewayMap(address[],address[],address)": {
        "notice": "Set the price gateway which will handle the pairs of price"
      }
    },
    "notice": "This contract helps managing price gateway and allow set price by govern",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3247,
        "contract": "contracts/AccountingSystem.sol:AccountingSystem",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 3250,
        "contract": "contracts/AccountingSystem.sol:AccountingSystem",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 8642,
        "contract": "contracts/AccountingSystem.sol:AccountingSystem",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 541,
        "contract": "contracts/AccountingSystem.sol:AccountingSystem",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 661,
        "contract": "contracts/AccountingSystem.sol:AccountingSystem",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 20803,
        "contract": "contracts/AccountingSystem.sol:AccountingSystem",
        "label": "defaultPriceGateway",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 20807,
        "contract": "contracts/AccountingSystem.sol:AccountingSystem",
        "label": "priceGateways",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 20813,
        "contract": "contracts/AccountingSystem.sol:AccountingSystem",
        "label": "tokenPairPriceGatewayMap",
        "offset": 0,
        "slot": "103",
        "type": "t_mapping(t_address,t_mapping(t_address,t_address))"
      },
      {
        "astId": 21168,
        "contract": "contracts/AccountingSystem.sol:AccountingSystem",
        "label": "__gap",
        "offset": 0,
        "slot": "104",
        "type": "t_array(t_uint256)50_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}