// SPDX-License-Identifier: GPL-3.0
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.5.2. SEE SOURCE BELOW. !!
pragma solidity ^0.8.0;

interface IUniswapBudgetApproval {
    event AdminChanged(address previousAdmin, address newAdmin);
    event AllowAddress(address target);
    event AllowAmount(uint256 amount);
    event AllowToToken(address token);
    event AllowToken(address token);
    event BeaconUpgraded(address indexed beacon);
    event CreateTransaction(uint256 id, bytes data, uint256 deadline);
    event ExecuteTransaction(uint256 id, bytes data);
    event Upgraded(address indexed implementation);

    function ETH_ADDRESS() external view returns (address);

    function NAME() external view returns (string memory);

    function addressesMapping(address) external view returns (bool);

    function allowAllAddresses() external view returns (bool);

    function allowAllToTokens() external view returns (bool);

    function allowAllTokens() external view returns (bool);

    function allowAnyAmount() external view returns (bool);

    function amountPercentage() external view returns (uint8);

    function approveTransaction(uint256 _transactionId) external;

    function approvers(uint256) external view returns (address);

    function approversMapping(address) external view returns (bool);

    function checkAddressValid(address to) external view returns (bool);

    function checkAllApproved(uint256 _transactionId)
        external
        view
        returns (bool);

    function checkAmountPercentageValid(uint256 amount, bool executed)
        external
        view
        returns (bool);

    function checkAmountValid(uint256 amount) external view returns (bool);

    function checkToTokenValid(address _token) external view returns (bool);

    function checkTokenValid(address token) external view returns (bool);

    function checkValid(
        address _tokenIn,
        address _tokenOut,
        uint256 _amount,
        bool executed
    ) external view returns (bool valid);

    function createTransaction(
        bytes memory _data,
        uint256 _deadline,
        bool _execute
    ) external returns (uint256);

    function dao() external view returns (address);

    function decode(
        address to,
        bytes memory data,
        uint256 value
    )
        external
        view
        returns (
            address tokenIn,
            address tokenOut,
            uint256 amountIn,
            uint256 amountOut,
            bool estimatedIn,
            bool estimatedOut
        );

    function decodeInitializeData(bytes memory _data)
        external
        pure
        returns (CommonBudgetApproval.InitializeParams memory result);

    function decodeTransactionData(bytes memory _data)
        external
        pure
        returns (
            address,
            bytes memory,
            uint256
        );

    function decodeUniswapInitializeData(bytes memory _data)
        external
        pure
        returns (
            CommonBudgetApproval.InitializeParams memory,
            bool,
            address[] memory
        );

    function decodeWithResult(
        address to,
        bytes memory data,
        uint256 value,
        bytes memory _results
    )
        external
        view
        returns (
            address,
            address,
            uint256,
            uint256
        );

    function encodeInitializeData(
        CommonBudgetApproval.InitializeParams memory params
    ) external pure returns (bytes memory data);

    function encodeTransactionData(
        address _to,
        bytes memory _data,
        uint256 _amount
    ) external pure returns (bytes memory);

    function encodeUniswapInitializeData(
        CommonBudgetApproval.InitializeParams memory params,
        bool _allowAllTokens,
        address[] memory _toTokens
    ) external pure returns (bytes memory data);

    function exactInput(UniswapSwapper.ExactOutputParams memory params)
        external
        pure
        returns (
            address,
            address,
            uint256,
            uint256,
            bool,
            bool
        );

    function exactInputSingle(
        UniswapSwapper.ExactOutputSingleParams memory params
    )
        external
        pure
        returns (
            address,
            address,
            uint256,
            uint256,
            bool,
            bool
        );

    function exactOutput(UniswapSwapper.ExactOutputParams memory params)
        external
        pure
        returns (
            address,
            address,
            uint256,
            uint256,
            bool,
            bool
        );

    function exactOutputSingle(
        UniswapSwapper.ExactOutputSingleParams memory params
    )
        external
        pure
        returns (
            address,
            address,
            uint256,
            uint256,
            bool,
            bool
        );

    function execute(
        address to,
        bytes memory data,
        uint256 value
    ) external;

    function executeTransaction(uint256 _transactionId) external;

    function executor() external view returns (address);

    function getRequiredAmount(
        address to,
        bytes memory data,
        uint256 value
    )
        external
        view
        returns (
            bool isRequireToken,
            address requiredToken,
            uint256 requiredAmount
        );

    function initialize(CommonBudgetApproval.InitializeParams memory params)
        external;

    function initialize(
        CommonBudgetApproval.InitializeParams memory params,
        bool _allowAllTokens,
        address[] memory _toTokens
    ) external;

    function lastTransactionId() external view returns (uint256);

    function proxiableUUID() external view returns (bytes32);

    function rejectTransaction(uint256 _transactionId) external;

    function supportsInterface(bytes4 interfaceID) external pure returns (bool);

    function swapExactTokensForTokens(
        uint256 amountIn,
        uint256 amountOutMin,
        address[] memory path,
        address
    )
        external
        pure
        returns (
            address,
            address,
            uint256,
            uint256,
            bool,
            bool
        );

    function swapTokensForExactTokens(
        uint256 amountOut,
        uint256 amountInMax,
        address[] memory path,
        address
    )
        external
        pure
        returns (
            address,
            address,
            uint256,
            uint256,
            bool,
            bool
        );

    function text() external view returns (string memory);

    function toTokensMapping(address) external view returns (bool);

    function tokens(uint256) external view returns (address);

    function tokensMapping(address) external view returns (bool);

    function totalAmount() external view returns (uint256);

    function transactionType() external view returns (string memory);

    function transactions(uint256)
        external
        view
        returns (
            uint256 id,
            bytes memory data,
            uint8 status,
            uint256 deadline,
            bool isExist
        );

    function upgradeTo(address newImplementation) external;

    function upgradeToAndCall(address newImplementation, bytes memory data)
        external
        payable;

    receive() external payable;
}

interface CommonBudgetApproval {
    struct InitializeParams {
        address dao;
        address executor;
        address[] approvers;
        string text;
        string transactionType;
        bool allowAllAddresses;
        address[] addresses;
        bool allowAllTokens;
        address[] tokens;
        bool allowAnyAmount;
        uint256 totalAmount;
        uint8 amountPercentage;
    }
}

interface UniswapSwapper {
    struct ExactOutputParams {
        bytes path;
        address recipient;
        uint256 amountOut;
        uint256 amountInMaximum;
    }

    struct ExactOutputSingleParams {
        address tokenIn;
        address tokenOut;
        uint24 fee;
        address recipient;
        uint256 amountOut;
        uint256 amountInMaximum;
        uint160 sqrtPriceLimitX96;
    }
}

// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:
/*
[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"target","type":"address"}],"name":"AllowAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"AllowAmount","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"AllowToToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"AllowToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"CreateTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecuteTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"ETH_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"addressesMapping","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allowAllAddresses","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allowAllToTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allowAllTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allowAnyAmount","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"amountPercentage","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_transactionId","type":"uint256"}],"name":"approveTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"approvers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"approversMapping","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"checkAddressValid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_transactionId","type":"uint256"}],"name":"checkAllApproved","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"executed","type":"bool"}],"name":"checkAmountPercentageValid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"checkAmountValid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"checkToTokenValid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"checkTokenValid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"executed","type":"bool"}],"name":"checkValid","outputs":[{"internalType":"bool","name":"valid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"bool","name":"_execute","type":"bool"}],"name":"createTransaction","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"dao","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"decode","outputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"bool","name":"estimatedIn","type":"bool"},{"internalType":"bool","name":"estimatedOut","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"decodeInitializeData","outputs":[{"components":[{"internalType":"address","name":"dao","type":"address"},{"internalType":"address","name":"executor","type":"address"},{"internalType":"address[]","name":"approvers","type":"address[]"},{"internalType":"string","name":"text","type":"string"},{"internalType":"string","name":"transactionType","type":"string"},{"internalType":"bool","name":"allowAllAddresses","type":"bool"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"bool","name":"allowAllTokens","type":"bool"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"bool","name":"allowAnyAmount","type":"bool"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"uint8","name":"amountPercentage","type":"uint8"}],"internalType":"struct CommonBudgetApproval.InitializeParams","name":"result","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"decodeTransactionData","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"decodeUniswapInitializeData","outputs":[{"components":[{"internalType":"address","name":"dao","type":"address"},{"internalType":"address","name":"executor","type":"address"},{"internalType":"address[]","name":"approvers","type":"address[]"},{"internalType":"string","name":"text","type":"string"},{"internalType":"string","name":"transactionType","type":"string"},{"internalType":"bool","name":"allowAllAddresses","type":"bool"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"bool","name":"allowAllTokens","type":"bool"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"bool","name":"allowAnyAmount","type":"bool"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"uint8","name":"amountPercentage","type":"uint8"}],"internalType":"struct CommonBudgetApproval.InitializeParams","name":"","type":"tuple"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"_results","type":"bytes"}],"name":"decodeWithResult","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"dao","type":"address"},{"internalType":"address","name":"executor","type":"address"},{"internalType":"address[]","name":"approvers","type":"address[]"},{"internalType":"string","name":"text","type":"string"},{"internalType":"string","name":"transactionType","type":"string"},{"internalType":"bool","name":"allowAllAddresses","type":"bool"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"bool","name":"allowAllTokens","type":"bool"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"bool","name":"allowAnyAmount","type":"bool"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"uint8","name":"amountPercentage","type":"uint8"}],"internalType":"struct CommonBudgetApproval.InitializeParams","name":"params","type":"tuple"}],"name":"encodeInitializeData","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"encodeTransactionData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"dao","type":"address"},{"internalType":"address","name":"executor","type":"address"},{"internalType":"address[]","name":"approvers","type":"address[]"},{"internalType":"string","name":"text","type":"string"},{"internalType":"string","name":"transactionType","type":"string"},{"internalType":"bool","name":"allowAllAddresses","type":"bool"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"bool","name":"allowAllTokens","type":"bool"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"bool","name":"allowAnyAmount","type":"bool"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"uint8","name":"amountPercentage","type":"uint8"}],"internalType":"struct CommonBudgetApproval.InitializeParams","name":"params","type":"tuple"},{"internalType":"bool","name":"_allowAllTokens","type":"bool"},{"internalType":"address[]","name":"_toTokens","type":"address[]"}],"name":"encodeUniswapInitializeData","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct UniswapSwapper.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct UniswapSwapper.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct UniswapSwapper.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct UniswapSwapper.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_transactionId","type":"uint256"}],"name":"executeTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"executor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"getRequiredAmount","outputs":[{"internalType":"bool","name":"isRequireToken","type":"bool"},{"internalType":"address","name":"requiredToken","type":"address"},{"internalType":"uint256","name":"requiredAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"dao","type":"address"},{"internalType":"address","name":"executor","type":"address"},{"internalType":"address[]","name":"approvers","type":"address[]"},{"internalType":"string","name":"text","type":"string"},{"internalType":"string","name":"transactionType","type":"string"},{"internalType":"bool","name":"allowAllAddresses","type":"bool"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"bool","name":"allowAllTokens","type":"bool"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"bool","name":"allowAnyAmount","type":"bool"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"uint8","name":"amountPercentage","type":"uint8"}],"internalType":"struct CommonBudgetApproval.InitializeParams","name":"params","type":"tuple"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"dao","type":"address"},{"internalType":"address","name":"executor","type":"address"},{"internalType":"address[]","name":"approvers","type":"address[]"},{"internalType":"string","name":"text","type":"string"},{"internalType":"string","name":"transactionType","type":"string"},{"internalType":"bool","name":"allowAllAddresses","type":"bool"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"bool","name":"allowAllTokens","type":"bool"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"bool","name":"allowAnyAmount","type":"bool"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"uint8","name":"amountPercentage","type":"uint8"}],"internalType":"struct CommonBudgetApproval.InitializeParams","name":"params","type":"tuple"},{"internalType":"bool","name":"_allowAllTokens","type":"bool"},{"internalType":"address[]","name":"_toTokens","type":"address[]"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lastTransactionId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_transactionId","type":"uint256"}],"name":"rejectTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceID","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"","type":"address"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"","type":"address"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"text","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"toTokensMapping","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokensMapping","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"transactionType","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"transactions","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum CommonBudgetApproval.Status","name":"status","type":"uint8"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"isExist","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}]
*/
