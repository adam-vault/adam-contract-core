on:
  workflow_call:
    inputs:
      GIT_REF:
        required: true
        type: string
      LIB_CONSTANT_NETWORK:
        required: true
        type: string
      CONTRACT_DEPLOY_NETWORK:
        required: true
        type: string
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      RINKEBY_URL:
        required: true
      KOVAN_URL:
        required: true
      GOERLI_URL:
        required: true
      PRIVATE_KEY:
        required: true
      GH_PAT:
        required: true
      ETHERSCAN_API_KEY:
        required: true


env:
  GIT_REF: ${{ inputs.GIT_REF }}
  LIB_CONSTANT_NETWORK: ${{ inputs.LIB_CONSTANT_NETWORK }}
  CONTRACT_DEPLOY_NETWORK: ${{ inputs.CONTRACT_DEPLOY_NETWORK }}
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
  RINKEBY_URL: ${{ secrets.RINKEBY_URL }}
  GOERLI_URL: ${{ secrets.GOERLI_URL }}
  KOVAN_URL: ${{ secrets.KOVAN_URL }}
  LATEST_VERSION: ${{ inputs.GIT_REF }}
  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

jobs:
  deploy-contracts:
    name: Deploy Contracts
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3.0.0
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm install
      
      - name: Prepare env constant 
        run: npm run prepare:$LIB_CONSTANT_NETWORK

      - name: Compile Contracts # This also copies Machine ABIs to "abis/machine"
        run: |
          npm run compile && mkdir -p abis/machine && cp \
            artifacts/contracts/Adam.sol/Adam.json\
            artifacts/contracts/base/CommonBudgetApproval.sol/CommonBudgetApproval.json\
            artifacts/contracts/Dao.sol/Dao.json\
            artifacts/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol/IERC20Metadata.json\
            artifacts/@openzeppelin/contracts/token/ERC721/ERC721.sol/ERC721.json\
            artifacts/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol/IERC721Metadata.json\
            artifacts/contracts/Govern.sol/Govern.json\
            artifacts/contracts/GovernFactory.sol/GovernFactory.json\
            artifacts/contracts/Membership.sol/Membership.json\
            artifacts/contracts/TransferERC20BudgetApproval.sol/TransferERC20BudgetApproval.json\
            artifacts/contracts/TransferERC721BudgetApproval.sol/TransferERC721BudgetApproval.json\
            artifacts/contracts/TransferLiquidERC20BudgetApproval.sol/TransferLiquidERC20BudgetApproval.json\
            artifacts/contracts/UniswapBudgetApproval.sol/UniswapBudgetApproval.json\
            artifacts/contracts/UniswapAnyTokenBudgetApproval.sol/UniswapAnyTokenBudgetApproval.json\
            artifacts/contracts/UniswapLiquidBudgetApproval.sol/UniswapLiquidBudgetApproval.json\
            artifacts/contracts/LiquidPool.sol/LiquidPool.json\
            artifacts/contracts/Team.sol/Team.json\
            abis/machine

      - name: Generate Human Readable ABIs
        run: npx hardhat export-abi-human # This generates json files into "abis/human" folder
      
      - name: Deploy Contracts
        run: npx hardhat deploy --network $CONTRACT_DEPLOY_NETWORK # Deploy contracts

      - name: Upload Deployment Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deploy_${{ env.GIT_REF }}
          path: |
            abis/
            deploy-results/results.json
            deployments/

      - name: Verify Contracts
        run: npx hardhat etherscan-verify --network $CONTRACT_DEPLOY_NETWORK

      - name: Slack Notification
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": "*Contracts Deployed*\n*version*: ${{ env.GIT_REF }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
  
      - name: Make Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GH_PAT }}
          branch: autosync/contract_deploy_${{ env.GIT_REF }}
          title: Sync ${{ env.GIT_REF }} Contract Addresses and ABIs for ${{ env.CONTRACT_DEPLOY_NETWORK }}
          body: |
            Syncrhonizing Contract Addresses and ABIs from adam-contract-core
            Version: ${{ env.GIT_REF }}
            Ref. Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          add-paths: |
            deployments/**/*
          commit-message: "[Auto Commit] Sync ${{ env.GIT_REF }} deployments"
          base: main
          reviewers: |
            chikchoi6
            ayame30
            lokwkin
            eddy17c17c
            ckc981103
